--- Execution profile ---
Total samples       : 91263
unknown_Java        : 1556 (1.70%)
not_walkable_Java   : 107 (0.12%)
deoptimization      : 8 (0.01%)

Frame buffer usage  : 73.4248%

--- 28920000000 ns (3.17%), 2892 samples
  [ 0] sendto
  [ 1] Java_java_net_SocketOutputStream_socketWrite0
  [ 2] java.net.SocketOutputStream.socketWrite0_[j]
  [ 3] java.net.SocketOutputStream.socketWrite_[j]
  [ 4] java.net.SocketOutputStream.write_[j]
  [ 5] okio.Okio$1.write_[j]
  [ 6] okio.AsyncTimeout$1.write_[j]
  [ 7] okio.RealBufferedSink.flush_[j]
  [ 8] okhttp3.internal.http1.Http1Codec$FixedLengthSink.flush_[j]
  [ 9] okio.ForwardingSink.flush_[j]
  [10] okio.RealBufferedSink.flush_[j]
  [11] okio.RealBufferedSink$1.flush_[j]
  [12] org.msgpack.core.buffer.OutputStreamBufferOutput.flush_[j]
  [13] org.msgpack.core.MessagePacker.flush_[j]
  [14] org.msgpack.core.MessagePacker.writePayload_[j]
  [15] org.msgpack.core.MessagePacker.writePayload_[j]
  [16] datadog.trace.agent.common.writer.DDApi$1.writeTo_[j]
  [17] okhttp3.internal.http.CallServerInterceptor.intercept_[j]
  [18] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [19] okhttp3.internal.connection.ConnectInterceptor.intercept_[j]
  [20] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [21] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [22] okhttp3.internal.cache.CacheInterceptor.intercept_[j]
  [23] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [24] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [25] okhttp3.internal.http.BridgeInterceptor.intercept_[j]
  [26] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [27] okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept_[j]
  [28] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [29] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [30] okhttp3.RealCall.getResponseWithInterceptorChain_[j]
  [31] okhttp3.RealCall.execute_[j]
  [32] datadog.trace.agent.common.writer.DDApi.sendSerializedTraces_[j]
  [33] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer$1.run_[j]
  [34] java.util.concurrent.Executors$RunnableAdapter.call_[j]
  [35] java.util.concurrent.FutureTask.run_[j]
  [36] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201_[j]
  [37] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run_[j]
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [40] java.lang.Thread.run_[j]
  [41] [dd-trace-writer tid=37635]

--- 28650000000 ns (3.14%), 2865 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] java.lang.Object.wait_[j]
  [ 7] okio.AsyncTimeout.awaitTimeout_[j]
  [ 8] okio.AsyncTimeout$Watchdog.run_[j]
  [ 9] [Okio Watchdog tid=38147]

--- 6520000000 ns (0.71%), 652 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] com.lmax.disruptor.SleepingWaitStrategy.applyWaitMethod_[j]
  [ 6] com.lmax.disruptor.SleepingWaitStrategy.waitFor_[j]
  [ 7] com.lmax.disruptor.ProcessingSequenceBarrier.waitFor_[j]
  [ 8] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [ 9] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [10] java.lang.Thread.run_[j]
  [11] [dd-trace-disruptor tid=28675]

--- 5060000000 ns (0.55%), 506 samples
  [ 0] [unknown_Java]
  [ 1] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 3900000000 ns (0.43%), 390 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] os::sleep(Thread*, long, bool)
  [ 3] JVM_Sleep
  [ 4] java.lang.Thread.sleep_[j]
  [ 5] akka.actor.LightArrayRevolverScheduler.waitNanos_[j]
  [ 6] akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick_[j]
  [ 7] akka.actor.LightArrayRevolverScheduler$$anon$3.run_[j]
  [ 8] java.lang.Thread.run_[j]
  [ 9] [GatlingSystem-scheduler-1 tid=87043]

--- 3700000000 ns (0.41%), 370 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos_[j]
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask_[j]
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [dd-cleaner tid=26627]

--- 3450000000 ns (0.38%), 345 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos_[j]
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask_[j]
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [10] [unknown]
  [11] java.lang.Thread.run_[j]
  [12] [dd-cleaner tid=26627]

--- 3140000000 ns (0.34%), 314 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | producer-2 tid=46339]

--- 2650000000 ns (0.29%), 265 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-2 tid=46339]

--- 2480000000 ns (0.27%), 248 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-1 tid=45827]

--- 2150000000 ns (0.24%), 215 samples
  [ 0] pread
  [ 1] rocksdb::RandomAccessFileReader::Read(unsigned long long, unsigned long, rocksdb::Slice*, char*) const
  [ 2] rocksdb::BlockFetcher::ReadBlockContents()
  [ 3] rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::Slice, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, bool, rocksdb::GetContext*)
  [ 4] rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&)
  [ 5] rocksdb::BlockBasedTable::Close()
  [ 6] rocksdb::BlockBasedTable::Close()
  [ 7] rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
  [ 8] rocksdb::MergeIteratorBuilder::Finish()
  [ 9] rocksdb::DBIter::Seek(rocksdb::Slice const&)
  [10] Java_org_rocksdb_RocksIterator_seek0
  [11] org.rocksdb.RocksIterator.seek0_[j]
  [12] org.rocksdb.AbstractRocksIterator.seek_[j]
  [13] org.apache.kafka.streams.state.internals.RocksDBRangeIterator.<init>_[j]
  [14] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.range_[j]
  [15] org.apache.kafka.streams.state.internals.RocksDBStore.range_[j]
  [16] org.apache.kafka.streams.state.internals.SegmentIterator.hasNext_[j]
  [17] org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator.hasNext_[j]
  [18] org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator.hasNext_[j]
  [19] org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin$KStreamKStreamJoinProcessor.process_[j]
  [20] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [21] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [22] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [23] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [24] org.apache.kafka.streams.kstream.internals.KStreamJoinWindow$KStreamJoinWindowProcessor.process_[j]
  [25] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [26] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [27] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [28] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [29] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [30] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [31] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [32] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [33] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [34] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [35] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [36] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 2050000000 ns (0.22%), 205 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] okio.AsyncTimeout.awaitTimeout_[j]
  [ 7] okio.AsyncTimeout$Watchdog.run_[j]
  [ 8] [Okio Watchdog tid=38147]

--- 2030000000 ns (0.22%), 203 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] os::PlatformEvent::unpark()
  [ 3] ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*)
  [ 4] SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*)
  [ 5] okio.AsyncTimeout.scheduleTimeout_[j]
  [ 6] okio.AsyncTimeout.enter_[j]
  [ 7] okio.AsyncTimeout$1.flush_[j]
  [ 8] okio.RealBufferedSink.flush_[j]
  [ 9] okhttp3.internal.http1.Http1Codec$FixedLengthSink.flush_[j]
  [10] okio.ForwardingSink.flush_[j]
  [11] okio.RealBufferedSink.flush_[j]
  [12] okio.RealBufferedSink$1.flush_[j]
  [13] org.msgpack.core.buffer.OutputStreamBufferOutput.flush_[j]
  [14] org.msgpack.core.MessagePacker.flush_[j]
  [15] org.msgpack.core.MessagePacker.writePayload_[j]
  [16] org.msgpack.core.MessagePacker.writePayload_[j]
  [17] datadog.trace.agent.common.writer.DDApi$1.writeTo_[j]
  [18] okhttp3.internal.http.CallServerInterceptor.intercept_[j]
  [19] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [20] okhttp3.internal.connection.ConnectInterceptor.intercept_[j]
  [21] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [22] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [23] okhttp3.internal.cache.CacheInterceptor.intercept_[j]
  [24] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [25] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [26] okhttp3.internal.http.BridgeInterceptor.intercept_[j]
  [27] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [28] okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept_[j]
  [29] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [30] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [31] okhttp3.RealCall.getResponseWithInterceptorChain_[j]
  [32] okhttp3.RealCall.execute_[j]
  [33] datadog.trace.agent.common.writer.DDApi.sendSerializedTraces_[j]
  [34] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer$1.run_[j]
  [35] java.util.concurrent.Executors$RunnableAdapter.call_[j]
  [36] java.util.concurrent.FutureTask.run_[j]
  [37] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201_[j]
  [38] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run_[j]
  [39] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [40] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [41] java.lang.Thread.run_[j]
  [42] [dd-trace-writer tid=37635]

--- 2020000000 ns (0.22%), 202 samples
  [ 0] __psynch_cvwait
  [ 1] rocksdb::port::CondVar::Wait()
  [ 2] rocksdb::InstrumentedCondVar::Wait()
  [ 3] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 4] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 5] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 6] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] org.rocksdb.RocksDB.flush_[j]
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [11] org.apache.kafka.streams.state.internals.AbstractSegments.flush_[j]
  [12] org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.MeteredWindowStore.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [18] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [28] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 2010000000 ns (0.22%), 201 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=77827]

--- 1870000000 ns (0.20%), 187 samples
  [ 0] __gettimeofday
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] java.lang.Object.wait_[j]
  [ 7] okio.AsyncTimeout.awaitTimeout_[j]
  [ 8] okio.AsyncTimeout$Watchdog.run_[j]
  [ 9] [Okio Watchdog tid=38147]

--- 1740000000 ns (0.19%), 174 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | producer-1 tid=45827]

--- 1670000000 ns (0.18%), 167 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [15] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [Thread-7 tid=84227]

--- 1660000000 ns (0.18%), 166 samples
  [ 0] small_free_list_add_ptr
  [ 1] free_small
  [ 2] rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, rocksdb::Slice const&, unsigned long, bool, rocksdb::GetContext*)
  [ 3] rocksdb::LRUHandleTable::~LRUHandleTable()
  [ 4] rocksdb::LRUCache::~LRUCache()
  [ 5] Java_org_rocksdb_LRUCache_disposeInternal
  [ 6] org.rocksdb.LRUCache.disposeInternal_[j]
  [ 7] org.rocksdb.RocksObject.disposeInternal_[j]
  [ 8] org.rocksdb.AbstractImmutableNativeReference.close_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore.close_[j]
  [10] org.apache.kafka.streams.state.internals.AbstractSegments.close_[j]
  [11] org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.close_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [15] org.apache.kafka.streams.state.internals.MeteredWindowStore.close_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorStateManager.close_[j]
  [17] org.apache.kafka.streams.processor.internals.AbstractTask.closeStateManager_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.closeSuspended_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.close_[j]
  [20] org.apache.kafka.streams.processor.internals.AssignedTasks.close_[j]
  [21] org.apache.kafka.streams.processor.internals.TaskManager.shutdown_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.completeShutdown_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [24] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 1640000000 ns (0.18%), 164 samples
  [ 0] rocksdb::DataBlockIter::Seek(rocksdb::Slice const&)
  [ 1] rocksdb::DataBlockIter::Seek(rocksdb::Slice const&)
  [ 2] rocksdb::BlockBasedTable::Close()
  [ 3] rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
  [ 4] rocksdb::MergeIteratorBuilder::Finish()
  [ 5] rocksdb::DBIter::Seek(rocksdb::Slice const&)
  [ 6] Java_org_rocksdb_RocksIterator_seek0
  [ 7] org.rocksdb.RocksIterator.seek0_[j]
  [ 8] org.rocksdb.AbstractRocksIterator.seek_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBRangeIterator.<init>_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.range_[j]
  [11] org.apache.kafka.streams.state.internals.RocksDBStore.range_[j]
  [12] org.apache.kafka.streams.state.internals.SegmentIterator.hasNext_[j]
  [13] org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator.hasNext_[j]
  [14] org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator.hasNext_[j]
  [15] org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin$KStreamKStreamJoinProcessor.process_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [18] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [19] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [20] org.apache.kafka.streams.kstream.internals.KStreamJoinWindow$KStreamJoinWindowProcessor.process_[j]
  [21] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [22] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [23] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [24] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [25] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [27] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [28] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [29] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [30] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [31] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [32] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 1640000000 ns (0.18%), 164 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [Thread-7 tid=84227]

--- 1570000000 ns (0.17%), 157 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=31235]

--- 1570000000 ns (0.17%), 157 samples
  [ 0] __psynch_cvsignal
  [ 1] os::PlatformEvent::unpark()
  [ 2] ObjectMonitor::ExitEpilog(Thread*, ObjectWaiter*)
  [ 3] SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*)
  [ 4] okio.AsyncTimeout.scheduleTimeout_[j]
  [ 5] okio.AsyncTimeout.enter_[j]
  [ 6] okio.AsyncTimeout$1.flush_[j]
  [ 7] okio.RealBufferedSink.flush_[j]
  [ 8] okhttp3.internal.http1.Http1Codec$FixedLengthSink.flush_[j]
  [ 9] okio.ForwardingSink.flush_[j]
  [10] okio.RealBufferedSink.flush_[j]
  [11] okio.RealBufferedSink$1.flush_[j]
  [12] org.msgpack.core.buffer.OutputStreamBufferOutput.flush_[j]
  [13] org.msgpack.core.MessagePacker.flush_[j]
  [14] org.msgpack.core.MessagePacker.writePayload_[j]
  [15] org.msgpack.core.MessagePacker.writePayload_[j]
  [16] datadog.trace.agent.common.writer.DDApi$1.writeTo_[j]
  [17] okhttp3.internal.http.CallServerInterceptor.intercept_[j]
  [18] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [19] okhttp3.internal.connection.ConnectInterceptor.intercept_[j]
  [20] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [21] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [22] okhttp3.internal.cache.CacheInterceptor.intercept_[j]
  [23] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [24] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [25] okhttp3.internal.http.BridgeInterceptor.intercept_[j]
  [26] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [27] okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept_[j]
  [28] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [29] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [30] okhttp3.RealCall.getResponseWithInterceptorChain_[j]
  [31] okhttp3.RealCall.execute_[j]
  [32] datadog.trace.agent.common.writer.DDApi.sendSerializedTraces_[j]
  [33] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer$1.run_[j]
  [34] java.util.concurrent.Executors$RunnableAdapter.call_[j]
  [35] java.util.concurrent.FutureTask.run_[j]
  [36] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201_[j]
  [37] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run_[j]
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [40] java.lang.Thread.run_[j]
  [41] [dd-trace-writer tid=37635]

--- 1520000000 ns (0.17%), 152 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=77675]

--- 1460000000 ns (0.16%), 146 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos_[j]
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask_[j]
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [EventSourcedClient-scheduler-1 tid=67587]

--- 1440000000 ns (0.16%), 144 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=56491]

--- 1420000000 ns (0.16%), 142 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=56235]

--- 1390000000 ns (0.15%), 139 samples
  [ 0] java.lang.Object.wait_[j]
  [ 1] java.lang.Object.wait_[j]
  [ 2] okio.AsyncTimeout.awaitTimeout_[j]
  [ 3] okio.AsyncTimeout$Watchdog.run_[j]
  [ 4] [Okio Watchdog tid=38147]

--- 1340000000 ns (0.15%), 134 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-2 tid=46339]

--- 1320000000 ns (0.14%), 132 samples
  [ 0] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 1] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 2] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 3] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 4] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [ 6] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [ 7] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [ 8] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [ 9] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [10] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [11] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [12] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [dd-trace-disruptor tid=28675]

--- 1300000000 ns (0.14%), 130 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly_[j]
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly_[j]
  [ 8] java.util.concurrent.CountDownLatch.await_[j]
  [ 9] org.apache.kafka.clients.producer.internals.TransactionalRequestResult.await_[j]
  [10] org.apache.kafka.clients.producer.KafkaProducer.sendOffsetsToTransaction_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [14] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [19] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 1280000000 ns (0.14%), 128 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos_[j]
  [ 7] java.util.concurrent.CountDownLatch.await_[j]
  [ 8] org.apache.kafka.clients.producer.internals.TransactionalRequestResult.await_[j]
  [ 9] org.apache.kafka.clients.producer.KafkaProducer.commitTransaction_[j]
  [10] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [18] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 1260000000 ns (0.14%), 126 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_2-producer tid=51715]

--- 1260000000 ns (0.14%), 126 samples
  [ 0] java.lang.StringCoding.encode_[j]
  [ 1] java.lang.String.getBytes_[j]
  [ 2] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packString_[j]
  [ 4] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [10] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [11] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [12] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [13] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [14] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [15] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [16] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [17] java.lang.Thread.run_[j]
  [18] [dd-trace-disruptor tid=28675]

--- 1240000000 ns (0.14%), 124 samples
  [ 0] java.lang.StringCoding.encode_[j]
  [ 1] java.lang.String.getBytes_[j]
  [ 2] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packString_[j]
  [ 4] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [12] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [13] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [14] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [15] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [16] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [17] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [18] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [19] java.lang.Thread.run_[j]
  [20] [dd-trace-disruptor tid=28675]

--- 1200000000 ns (0.13%), 120 samples
  [ 0] sun.nio.cs.UTF_8$Encoder.encode_[j]
  [ 1] java.lang.StringCoding.encode_[j]
  [ 2] java.lang.String.getBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 4] org.msgpack.core.MessagePacker.packString_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [12] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [13] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [14] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [15] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [16] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [17] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [18] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [19] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [20] java.lang.Thread.run_[j]
  [21] [dd-trace-disruptor tid=28675]

--- 1170000000 ns (0.13%), 117 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_2-producer tid=52227]

--- 1100000000 ns (0.12%), 110 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=55043]

--- 1090000000 ns (0.12%), 109 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=54019]

--- 1070000000 ns (0.12%), 107 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=78339]

--- 1060000000 ns (0.12%), 106 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-2 tid=46339]

--- 1050000000 ns (0.12%), 105 samples
  [ 0] sun.nio.cs.UTF_8$Encoder.encode_[j]
  [ 1] java.lang.StringCoding.encode_[j]
  [ 2] java.lang.String.getBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 4] org.msgpack.core.MessagePacker.packString_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [11] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [12] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [13] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [14] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [15] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [16] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [17] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [18] java.lang.Thread.run_[j]
  [19] [dd-trace-disruptor tid=28675]

--- 1030000000 ns (0.11%), 103 samples
  [ 0] __psynch_cvwait
  [ 1] rocksdb::port::CondVar::Wait()
  [ 2] rocksdb::InstrumentedCondVar::Wait()
  [ 3] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 4] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 5] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 6] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] org.rocksdb.RocksDB.flush_[j]
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [11] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [27] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 1030000000 ns (0.11%), 103 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=55299]

--- 1030000000 ns (0.11%), 103 samples
  [ 0] ObjectMonitor::TrySpin_VaryDuration(Thread*)
  [ 1] ObjectMonitor::enter(Thread*)
  [ 2] SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*)
  [ 3] [dd-trace-writer tid=37635]

--- 1020000000 ns (0.11%), 102 samples
  [ 0] java.nio.charset.CharsetEncoder.<init>_[j]
  [ 1] java.nio.charset.CharsetEncoder.<init>_[j]
  [ 2] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 3] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 4] sun.nio.cs.UTF_8.newEncoder_[j]
  [ 5] java.lang.StringCoding.encode_[j]
  [ 6] java.lang.String.getBytes_[j]
  [ 7] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 8] org.msgpack.core.MessagePacker.packString_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [12] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [13] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [14] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [15] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [16] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [17] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [18] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [19] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [20] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [21] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [22] java.lang.Thread.run_[j]
  [23] [dd-trace-disruptor tid=28675]

--- 1000000000 ns (0.11%), 100 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53763]

--- 1000000000 ns (0.11%), 100 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=56491]

--- 980000000 ns (0.11%), 98 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=56235]

--- 970000000 ns (0.11%), 97 samples
  [ 0] java.nio.charset.CharsetEncoder.<init>_[j]
  [ 1] java.nio.charset.CharsetEncoder.<init>_[j]
  [ 2] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 3] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 4] sun.nio.cs.UTF_8.newEncoder_[j]
  [ 5] java.lang.StringCoding.encode_[j]
  [ 6] java.lang.String.getBytes_[j]
  [ 7] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 8] org.msgpack.core.MessagePacker.packString_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [12] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [13] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [14] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [15] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [16] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [17] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [18] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [19] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [20] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [21] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [22] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [23] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [24] java.lang.Thread.run_[j]
  [25] [dd-trace-disruptor tid=28675]

--- 960000000 ns (0.11%), 96 samples
  [ 0] vtable stub
  [ 1] com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField_[j]
  [ 2] com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields_[j]
  [ 3] com.fasterxml.jackson.databind.ser.BeanSerializer.serialize_[j]
  [ 4] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents_[j]
  [ 5] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 6] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 7] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize_[j]
  [ 8] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue_[j]
  [ 9] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [10] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [11] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [12] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [13] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [14] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [15] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [dd-trace-disruptor tid=28675]

--- 950000000 ns (0.10%), 95 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_1-producer tid=80131]

--- 940000000 ns (0.10%), 94 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_0-producer tid=79363]

--- 940000000 ns (0.10%), 94 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=56235]

--- 940000000 ns (0.10%), 94 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-3 tid=86531]

--- 930000000 ns (0.10%), 93 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-1 tid=45827]

--- 930000000 ns (0.10%), 93 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_2-producer tid=50691]

--- 930000000 ns (0.10%), 93 samples
  [ 0] [unknown_Java]
  [ 1] [dd-trace-writer tid=37635]

--- 930000000 ns (0.10%), 93 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=77827]

--- 900000000 ns (0.10%), 90 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [14] java.lang.Thread.run_[j]
  [15] [kafka-admin-client-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-admin tid=47107]

--- 890000000 ns (0.10%), 89 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] WatcherThread::sleep() const
  [ 5] WatcherThread::run()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=34051]

--- 890000000 ns (0.10%), 89 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-2 tid=44803]

--- 890000000 ns (0.10%), 89 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=54531]

--- 880000000 ns (0.10%), 88 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=30979]

--- 870000000 ns (0.10%), 87 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=78083]

--- 870000000 ns (0.10%), 87 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=5891]

--- 850000000 ns (0.09%), 85 samples
  [ 0] com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField_[j]
  [ 1] com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields_[j]
  [ 2] com.fasterxml.jackson.databind.ser.BeanSerializer.serialize_[j]
  [ 3] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents_[j]
  [ 4] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 5] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 6] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize_[j]
  [ 7] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue_[j]
  [ 8] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [ 9] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [10] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [11] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [12] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [13] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [14] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [dd-trace-disruptor tid=28675]

--- 850000000 ns (0.09%), 85 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=56491]

--- 850000000 ns (0.09%), 85 samples
  [ 0] java.lang.reflect.Method.invoke_[j]
  [ 1] com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField_[j]
  [ 2] com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields_[j]
  [ 3] com.fasterxml.jackson.databind.ser.BeanSerializer.serialize_[j]
  [ 4] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents_[j]
  [ 5] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 6] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 7] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize_[j]
  [ 8] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue_[j]
  [ 9] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [10] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [11] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [12] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [13] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [14] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [15] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [dd-trace-disruptor tid=28675]

--- 850000000 ns (0.09%), 85 samples
  [ 0] rocksdb::DataBlockIter::Next()
  [ 1] rocksdb::DataBlockIter::Seek(rocksdb::Slice const&)
  [ 2] rocksdb::BlockBasedTable::Close()
  [ 3] rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
  [ 4] rocksdb::MergeIteratorBuilder::Finish()
  [ 5] rocksdb::DBIter::Seek(rocksdb::Slice const&)
  [ 6] Java_org_rocksdb_RocksIterator_seek0
  [ 7] org.rocksdb.RocksIterator.seek0_[j]
  [ 8] org.rocksdb.AbstractRocksIterator.seek_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBRangeIterator.<init>_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.range_[j]
  [11] org.apache.kafka.streams.state.internals.RocksDBStore.range_[j]
  [12] org.apache.kafka.streams.state.internals.SegmentIterator.hasNext_[j]
  [13] org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator.hasNext_[j]
  [14] org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator.hasNext_[j]
  [15] org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin$KStreamKStreamJoinProcessor.process_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [18] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [19] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [20] org.apache.kafka.streams.kstream.internals.KStreamJoinWindow$KStreamJoinWindowProcessor.process_[j]
  [21] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [22] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [23] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [24] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [25] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [27] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [28] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [29] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [30] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [31] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [32] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 840000000 ns (0.09%), 84 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::EnterI(Thread*)
  [ 3] ObjectMonitor::enter(Thread*)
  [ 4] SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*)
  [ 5] okio.Okio$1.write_[j]
  [ 6] okio.AsyncTimeout$1.write_[j]
  [ 7] okio.RealBufferedSink.flush_[j]
  [ 8] okio.RealBufferedSink$1.flush_[j]
  [ 9] org.msgpack.core.buffer.OutputStreamBufferOutput.flush_[j]
  [10] org.msgpack.core.MessagePacker.flush_[j]
  [11] org.msgpack.core.MessagePacker.writePayload_[j]
  [12] org.msgpack.core.MessagePacker.writePayload_[j]
  [13] datadog.trace.agent.common.writer.DDApi$1.writeTo_[j]
  [14] okhttp3.internal.http.CallServerInterceptor.intercept_[j]
  [15] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [16] okhttp3.internal.connection.ConnectInterceptor.intercept_[j]
  [17] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [18] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [19] okhttp3.internal.cache.CacheInterceptor.intercept_[j]
  [20] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [21] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [22] okhttp3.internal.http.BridgeInterceptor.intercept_[j]
  [23] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [24] okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept_[j]
  [25] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [26] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [27] okhttp3.RealCall.getResponseWithInterceptorChain_[j]
  [28] okhttp3.RealCall.execute_[j]
  [29] datadog.trace.agent.common.writer.DDApi.sendSerializedTraces_[j]
  [30] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer$1.run_[j]
  [31] java.util.concurrent.Executors$RunnableAdapter.call_[j]
  [32] java.util.concurrent.FutureTask.run_[j]
  [33] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201_[j]
  [34] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run_[j]
  [35] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [36] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [37] java.lang.Thread.run_[j]
  [38] [dd-trace-writer tid=37635]

--- 840000000 ns (0.09%), 84 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=6659]

--- 840000000 ns (0.09%), 84 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=77675]

--- 830000000 ns (0.09%), 83 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=5379]

--- 830000000 ns (0.09%), 83 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-admin-client-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-admin tid=47107]

--- 830000000 ns (0.09%), 83 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_0-producer tid=49411]

--- 820000000 ns (0.09%), 82 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [10] java.lang.Thread.run_[j]
  [11] [kafka-admin-client-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-admin tid=47107]

--- 810000000 ns (0.09%), 81 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_0-producer tid=50179]

--- 810000000 ns (0.09%), 81 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=54787]

--- 810000000 ns (0.09%), 81 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_1-producer tid=79107]

--- 810000000 ns (0.09%), 81 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=5635]

--- 810000000 ns (0.09%), 81 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_0-producer tid=49411]

--- 810000000 ns (0.09%), 81 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52739]

--- 800000000 ns (0.09%), 80 samples
  [ 0] small_free_list_remove_ptr_no_clear
  [ 1] free_small
  [ 2] rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, rocksdb::Slice const&, unsigned long, bool, rocksdb::GetContext*)
  [ 3] rocksdb::LRUHandleTable::~LRUHandleTable()
  [ 4] rocksdb::LRUCache::~LRUCache()
  [ 5] Java_org_rocksdb_LRUCache_disposeInternal
  [ 6] org.rocksdb.LRUCache.disposeInternal_[j]
  [ 7] org.rocksdb.RocksObject.disposeInternal_[j]
  [ 8] org.rocksdb.AbstractImmutableNativeReference.close_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore.close_[j]
  [10] org.apache.kafka.streams.state.internals.AbstractSegments.close_[j]
  [11] org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.close_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [15] org.apache.kafka.streams.state.internals.MeteredWindowStore.close_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorStateManager.close_[j]
  [17] org.apache.kafka.streams.processor.internals.AbstractTask.closeStateManager_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.closeSuspended_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.close_[j]
  [20] org.apache.kafka.streams.processor.internals.AssignedTasks.close_[j]
  [21] org.apache.kafka.streams.processor.internals.TaskManager.shutdown_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.completeShutdown_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [24] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 790000000 ns (0.09%), 79 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_1-producer tid=51203]

--- 790000000 ns (0.09%), 79 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=8963]

--- 790000000 ns (0.09%), 79 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_2-producer tid=50691]

--- 790000000 ns (0.09%), 79 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=55555]

--- 780000000 ns (0.09%), 78 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly_[j]
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly_[j]
  [ 8] java.util.concurrent.CountDownLatch.await_[j]
  [ 9] org.apache.kafka.clients.producer.internals.ProduceRequestResult.await_[j]
  [10] org.apache.kafka.clients.producer.internals.RecordAccumulator.awaitFlushCompletion_[j]
  [11] org.apache.kafka.clients.producer.KafkaProducer.flush_[j]
  [12] org.apache.kafka.streams.processor.internals.RecordCollectorImpl.flush_[j]
  [13] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [16] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [17] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [22] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 770000000 ns (0.08%), 77 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=6403]

--- 770000000 ns (0.08%), 77 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53507]

--- 770000000 ns (0.08%), 77 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52995]

--- 760000000 ns (0.08%), 76 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_2-producer tid=52227]

--- 760000000 ns (0.08%), 76 samples
  [ 0] sun.nio.cs.UTF_8.newEncoder_[j]
  [ 1] java.lang.StringCoding.encode_[j]
  [ 2] java.lang.String.getBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 4] org.msgpack.core.MessagePacker.packString_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [11] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [12] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [13] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [14] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [15] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [16] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [17] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [18] java.lang.Thread.run_[j]
  [19] [dd-trace-disruptor tid=28675]

--- 760000000 ns (0.08%), 76 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=6915]

--- 750000000 ns (0.08%), 75 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_1-producer tid=79107]

--- 750000000 ns (0.08%), 75 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=36355]

--- 750000000 ns (0.08%), 75 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_0-producer tid=50179]

--- 750000000 ns (0.08%), 75 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=55811]

--- 730000000 ns (0.08%), 73 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_2-producer tid=51715]

--- 730000000 ns (0.08%), 73 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53251]

--- 720000000 ns (0.08%), 72 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=56491]

--- 710000000 ns (0.08%), 71 samples
  [ 0] sun.nio.cs.UTF_8.newEncoder_[j]
  [ 1] java.lang.StringCoding.encode_[j]
  [ 2] java.lang.String.getBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 4] org.msgpack.core.MessagePacker.packString_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [12] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [13] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [14] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [15] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [16] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [17] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [18] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [19] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [20] java.lang.Thread.run_[j]
  [21] [dd-trace-disruptor tid=28675]

--- 710000000 ns (0.08%), 71 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_1-producer tid=79107]

--- 700000000 ns (0.08%), 70 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=56235]

--- 700000000 ns (0.08%), 70 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_0-producer tid=50179]

--- 700000000 ns (0.08%), 70 samples
  [ 0] java.lang.System.getSecurityManager_[j]
  [ 1] java.lang.StringCoding.encode_[j]
  [ 2] java.lang.String.getBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 4] org.msgpack.core.MessagePacker.packString_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [11] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [12] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [13] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [14] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [15] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [16] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [17] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [18] java.lang.Thread.run_[j]
  [19] [dd-trace-disruptor tid=28675]

--- 690000000 ns (0.08%), 69 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=7171]

--- 690000000 ns (0.08%), 69 samples
  [ 0] java.lang.System.getSecurityManager_[j]
  [ 1] java.lang.StringCoding.encode_[j]
  [ 2] java.lang.String.getBytes_[j]
  [ 3] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 4] org.msgpack.core.MessagePacker.packString_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [12] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [13] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [14] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [15] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [16] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [17] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [18] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [19] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [20] java.lang.Thread.run_[j]
  [21] [dd-trace-disruptor tid=28675]

--- 690000000 ns (0.08%), 69 samples
  [ 0] java.util.concurrent.ConcurrentHashMap$Traverser.advance_[j]
  [ 1] java.util.concurrent.ConcurrentHashMap$EntryIterator.next_[j]
  [ 2] java.util.concurrent.ConcurrentHashMap$EntryIterator.next_[j]
  [ 3] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next_[j]
  [ 4] java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next_[j]
  [ 5] datadog.trace.agent.ot.DDSpan.getMeta_[j]
  [ 6] sun.reflect.GeneratedMethodAccessor30.invoke_[j]
  [ 7] sun.reflect.DelegatingMethodAccessorImpl.invoke_[j]
  [ 8] java.lang.reflect.Method.invoke_[j]
  [ 9] com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField_[j]
  [10] com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields_[j]
  [11] com.fasterxml.jackson.databind.ser.BeanSerializer.serialize_[j]
  [12] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents_[j]
  [13] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [14] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [15] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize_[j]
  [16] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue_[j]
  [17] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [18] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [19] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [20] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [21] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [22] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [23] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [24] java.lang.Thread.run_[j]
  [25] [dd-trace-disruptor tid=28675]

--- 680000000 ns (0.07%), 68 samples
  [ 0] okio.Buffer.write_[j]
  [ 1] okio.RealBufferedSink.write_[j]
  [ 2] okhttp3.internal.http1.Http1Codec$FixedLengthSink.write_[j]
  [ 3] okio.ForwardingSink.write_[j]
  [ 4] okhttp3.internal.http.CallServerInterceptor$CountingSink.write_[j]
  [ 5] okio.RealBufferedSink.flush_[j]
  [ 6] okhttp3.internal.http1.Http1Codec$FixedLengthSink.flush_[j]
  [ 7] okio.ForwardingSink.flush_[j]
  [ 8] okio.RealBufferedSink.flush_[j]
  [ 9] okio.RealBufferedSink$1.flush_[j]
  [10] org.msgpack.core.buffer.OutputStreamBufferOutput.flush_[j]
  [11] org.msgpack.core.MessagePacker.flush_[j]
  [12] org.msgpack.core.MessagePacker.writePayload_[j]
  [13] org.msgpack.core.MessagePacker.writePayload_[j]
  [14] datadog.trace.agent.common.writer.DDApi$1.writeTo_[j]
  [15] okhttp3.internal.http.CallServerInterceptor.intercept_[j]
  [16] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [17] okhttp3.internal.connection.ConnectInterceptor.intercept_[j]
  [18] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [19] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [20] okhttp3.internal.cache.CacheInterceptor.intercept_[j]
  [21] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [22] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [23] okhttp3.internal.http.BridgeInterceptor.intercept_[j]
  [24] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [25] okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept_[j]
  [26] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [27] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [28] okhttp3.RealCall.getResponseWithInterceptorChain_[j]
  [29] okhttp3.RealCall.execute_[j]
  [30] datadog.trace.agent.common.writer.DDApi.sendSerializedTraces_[j]
  [31] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer$1.run_[j]
  [32] java.util.concurrent.Executors$RunnableAdapter.call_[j]
  [33] java.util.concurrent.FutureTask.run_[j]
  [34] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201_[j]
  [35] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run_[j]
  [36] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [37] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [38] java.lang.Thread.run_[j]
  [39] [dd-trace-writer tid=37635]

--- 680000000 ns (0.07%), 68 samples
  [ 0] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 1] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 2] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 3] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 4] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [ 8] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [ 9] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [10] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [11] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [12] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [13] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [14] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [dd-trace-disruptor tid=28675]

--- 680000000 ns (0.07%), 68 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=77827]

--- 660000000 ns (0.07%), 66 samples
  [ 0] org.msgpack.core.MessagePacker.packString_[j]
  [ 1] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 2] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 3] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 4] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [ 7] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [ 8] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [ 9] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [10] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [11] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [12] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [13] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [14] java.lang.Thread.run_[j]
  [15] [dd-trace-disruptor tid=28675]

--- 660000000 ns (0.07%), 66 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_1-producer tid=51203]

--- 650000000 ns (0.07%), 65 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_0-producer tid=79363]

--- 650000000 ns (0.07%), 65 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-4 tid=74043]

--- 650000000 ns (0.07%), 65 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-8 tid=72451]

--- 640000000 ns (0.07%), 64 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=77827]

--- 640000000 ns (0.07%), 64 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [ 1] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [ 2] java.lang.Thread.run_[j]
  [ 3] [dd-cleaner tid=26627]

--- 640000000 ns (0.07%), 64 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_1-producer tid=80131]

--- 640000000 ns (0.07%), 64 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_0-producer tid=49411]

--- 640000000 ns (0.07%), 64 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=56235]

--- 630000000 ns (0.07%), 63 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.ForkJoinPool.awaitWork_[j]
  [ 5] java.util.concurrent.ForkJoinPool.runWorker_[j]
  [ 6] java.util.concurrent.ForkJoinWorkerThread.run_[j]
  [ 7] [ForkJoinPool.commonPool-worker-9 tid=60675]

--- 630000000 ns (0.07%), 63 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53507]

--- 620000000 ns (0.07%), 62 samples
  [ 0] rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&)
  [ 1] rocksdb::BlockBasedTable::Close()
  [ 2] rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
  [ 3] rocksdb::MergeIteratorBuilder::Finish()
  [ 4] rocksdb::DBIter::Seek(rocksdb::Slice const&)
  [ 5] Java_org_rocksdb_RocksIterator_seek0
  [ 6] org.rocksdb.RocksIterator.seek0_[j]
  [ 7] org.rocksdb.AbstractRocksIterator.seek_[j]
  [ 8] org.apache.kafka.streams.state.internals.RocksDBRangeIterator.<init>_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.range_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore.range_[j]
  [11] org.apache.kafka.streams.state.internals.SegmentIterator.hasNext_[j]
  [12] org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator.hasNext_[j]
  [13] org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator.hasNext_[j]
  [14] org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin$KStreamKStreamJoinProcessor.process_[j]
  [15] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [18] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [19] org.apache.kafka.streams.kstream.internals.KStreamJoinWindow$KStreamJoinWindowProcessor.process_[j]
  [20] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [21] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [22] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [23] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [24] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [26] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [27] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [28] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [29] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [30] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [31] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 620000000 ns (0.07%), 62 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [ 7] [kafka-coordinator-heartbeat-thread | avro-user-benchs-app tid=82435]

--- 620000000 ns (0.07%), 62 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_1-producer tid=51203]

--- 620000000 ns (0.07%), 62 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_2-producer tid=51715]

--- 620000000 ns (0.07%), 62 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [ 1] [unknown]
  [ 2] java.lang.Thread.run_[j]
  [ 3] [dd-cleaner tid=26627]

--- 620000000 ns (0.07%), 62 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-9 tid=71939]

--- 620000000 ns (0.07%), 62 samples
  [ 0] rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&, unsigned int)
  [ 1] rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, rocksdb::Slice const&, unsigned long, bool, rocksdb::GetContext*)
  [ 2] rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, rocksdb::Slice const&, unsigned long, bool, rocksdb::GetContext*)
  [ 3] rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::Slice, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, bool, rocksdb::GetContext*)
  [ 4] rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&)
  [ 5] rocksdb::BlockBasedTable::Close()
  [ 6] rocksdb::BlockBasedTable::Close()
  [ 7] rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
  [ 8] rocksdb::MergeIteratorBuilder::Finish()
  [ 9] rocksdb::DBIter::Seek(rocksdb::Slice const&)
  [10] Java_org_rocksdb_RocksIterator_seek0
  [11] org.rocksdb.RocksIterator.seek0_[j]
  [12] org.rocksdb.AbstractRocksIterator.seek_[j]
  [13] org.apache.kafka.streams.state.internals.RocksDBRangeIterator.<init>_[j]
  [14] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.range_[j]
  [15] org.apache.kafka.streams.state.internals.RocksDBStore.range_[j]
  [16] org.apache.kafka.streams.state.internals.SegmentIterator.hasNext_[j]
  [17] org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator.hasNext_[j]
  [18] org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator.hasNext_[j]
  [19] org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin$KStreamKStreamJoinProcessor.process_[j]
  [20] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [21] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [22] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [23] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [24] org.apache.kafka.streams.kstream.internals.KStreamJoinWindow$KStreamJoinWindowProcessor.process_[j]
  [25] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [26] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [27] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [28] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [29] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [30] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [31] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [32] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [33] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [34] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [35] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [36] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 620000000 ns (0.07%), 62 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_2-producer tid=51715]

--- 610000000 ns (0.07%), 61 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-0_1-producer tid=48387]

--- 610000000 ns (0.07%), 61 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_2-producer tid=50691]

--- 610000000 ns (0.07%), 61 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.ForkJoinPool.awaitWork_[j]
  [ 5] java.util.concurrent.ForkJoinPool.runWorker_[j]
  [ 6] java.util.concurrent.ForkJoinWorkerThread.run_[j]
  [ 7] [ForkJoinPool.commonPool-worker-11 tid=70659]

--- 610000000 ns (0.07%), 61 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=56491]

--- 610000000 ns (0.07%), 61 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=77675]

--- 610000000 ns (0.07%), 61 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=7683]

--- 600000000 ns (0.07%), 60 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)
  [ 4] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 5] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 9] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [10] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [12] rocksdb::DBImpl::BackgroundCallFlush()
  [13] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [14] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [15] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [16] _pthread_start
  [17] thread_start
  [18] [tid=77827]

--- 600000000 ns (0.07%), 60 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-6 tid=76643]

--- 600000000 ns (0.07%), 60 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=56491]

--- 590000000 ns (0.06%), 59 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-1_2-producer tid=49923]

--- 590000000 ns (0.06%), 59 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.read_[j]
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer_[j]
  [ 4] sun.nio.ch.IOUtil.read_[j]
  [ 5] sun.nio.ch.SocketChannelImpl.read_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.read_[j]
  [ 7] org.apache.kafka.common.network.NetworkReceive.readFrom_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.receive_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.read_[j]
  [10] org.apache.kafka.common.network.Selector.attemptRead_[j]
  [11] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [12] org.apache.kafka.common.network.Selector.poll_[j]
  [13] org.apache.kafka.clients.NetworkClient.poll_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | producer-2 tid=46339]

--- 590000000 ns (0.06%), 59 samples
  [ 0] org.msgpack.core.MessagePacker.packString_[j]
  [ 1] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 2] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 3] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 4] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [ 5] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 6] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [ 7] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [ 9] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [10] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [11] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [12] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [13] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [14] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [15] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [dd-trace-disruptor tid=28675]

--- 580000000 ns (0.06%), 58 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=77675]

--- 580000000 ns (0.06%), 58 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=56235]

--- 580000000 ns (0.06%), 58 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=77675]

--- 580000000 ns (0.06%), 58 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=31747]

--- 570000000 ns (0.06%), 57 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_0-producer tid=50179]

--- 570000000 ns (0.06%), 57 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_1-producer tid=51203]

--- 570000000 ns (0.06%), 57 samples
  [ 0] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 1] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 2] G1ParScanThreadState::trim_queue()
  [ 3] G1ParEvacuateFollowersClosure::do_void()
  [ 4] G1ParTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=6659]

--- 570000000 ns (0.06%), 57 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-1 tid=45827]

--- 560000000 ns (0.06%), 56 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-1_0-producer tid=81155]

--- 560000000 ns (0.06%), 56 samples
  [ 0] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [ 1] java.lang.Thread.run_[j]
  [ 2] [kafka-admin-client-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-admin tid=47107]

--- 560000000 ns (0.06%), 56 samples
  [ 0] [unknown_Java]
  [ 1] [kafka-producer-network-thread | producer-2 tid=46339]

--- 560000000 ns (0.06%), 56 samples
  [ 0] org.apache.kafka.common.utils.Bytes.compareTo_[j]
  [ 1] java.util.TreeMap.getEntry_[j]
  [ 2] java.util.TreeMap.get_[j]
  [ 3] org.apache.kafka.streams.state.internals.NamedCache.getInternal_[j]
  [ 4] org.apache.kafka.streams.state.internals.NamedCache.get_[j]
  [ 5] org.apache.kafka.streams.state.internals.ThreadCache.get_[j]
  [ 6] org.apache.kafka.streams.state.internals.CachingKeyValueStore.getInternal_[j]
  [ 7] org.apache.kafka.streams.state.internals.CachingKeyValueStore.get_[j]
  [ 8] org.apache.kafka.streams.state.internals.CachingKeyValueStore.get_[j]
  [ 9] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.get_[j]
  [10] org.apache.kafka.streams.processor.internals.ProcessorContextImpl$KeyValueStoreReadWriteDecorator.get_[j]
  [11] org.apache.kafka.streams.kstream.internals.KStreamReduce$KStreamReduceValueGetter.get_[j]
  [12] org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor.process_[j]
  [13] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [14] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [15] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [17] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [19] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [20] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [24] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 560000000 ns (0.06%), 56 samples
  [ 0] [unknown_Java]
  [ 1] [Thread-7 tid=84227]

--- 550000000 ns (0.06%), 55 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-2_2-producer tid=50691]

--- 550000000 ns (0.06%), 55 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_2-producer tid=52227]

--- 550000000 ns (0.06%), 55 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_0-producer tid=50179]

--- 550000000 ns (0.06%), 55 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=77675]

--- 550000000 ns (0.06%), 55 samples
  [ 0] java.nio.charset.CharsetEncoder.<init>_[j]
  [ 1] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 2] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 3] sun.nio.cs.UTF_8.newEncoder_[j]
  [ 4] java.lang.StringCoding.encode_[j]
  [ 5] java.lang.String.getBytes_[j]
  [ 6] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 7] org.msgpack.core.MessagePacker.packString_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [12] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [13] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [14] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [15] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [16] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [17] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [18] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [19] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [20] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [21] java.lang.Thread.run_[j]
  [22] [dd-trace-disruptor tid=28675]

--- 540000000 ns (0.06%), 54 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53763]

--- 540000000 ns (0.06%), 54 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.ForkJoinPool.awaitWork_[j]
  [ 5] java.util.concurrent.ForkJoinPool.runWorker_[j]
  [ 6] java.util.concurrent.ForkJoinWorkerThread.run_[j]
  [ 7] [ForkJoinPool.commonPool-worker-4 tid=71171]

--- 540000000 ns (0.06%), 54 samples
  [ 0] java.util.AbstractList.<init>_[j]
  [ 1] java.util.AbstractSequentialList.<init>_[j]
  [ 2] java.util.LinkedList.<init>_[j]
  [ 3] com.fasterxml.jackson.core.util.ByteArrayBuilder.<init>_[j]
  [ 4] com.fasterxml.jackson.core.util.ByteArrayBuilder.<init>_[j]
  [ 5] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [ 6] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [ 7] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [ 8] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [ 9] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [10] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [dd-trace-disruptor tid=28675]

--- 540000000 ns (0.06%), 54 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-0_2-producer tid=48899]

--- 540000000 ns (0.06%), 54 samples
  [ 0] java.nio.charset.CharsetEncoder.<init>_[j]
  [ 1] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 2] sun.nio.cs.UTF_8$Encoder.<init>_[j]
  [ 3] sun.nio.cs.UTF_8.newEncoder_[j]
  [ 4] java.lang.StringCoding.encode_[j]
  [ 5] java.lang.String.getBytes_[j]
  [ 6] org.msgpack.core.MessagePacker.packStringWithGetBytes_[j]
  [ 7] org.msgpack.core.MessagePacker.packString_[j]
  [ 8] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [ 9] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [10] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [11] org.msgpack.jackson.dataformat.MessagePackGenerator.packObject_[j]
  [12] org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  [13] org.msgpack.jackson.dataformat.MessagePackGenerator.packArray_[j]
  [14] org.msgpack.jackson.dataformat.MessagePackGenerator.flush_[j]
  [15] org.msgpack.jackson.dataformat.MessagePackGenerator.close_[j]
  [16] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [17] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [18] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [19] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [20] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [21] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [22] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [23] java.lang.Thread.run_[j]
  [24] [dd-trace-disruptor tid=28675]

--- 530000000 ns (0.06%), 53 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-5 tid=75051]

--- 530000000 ns (0.06%), 53 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_0-producer tid=79363]

--- 530000000 ns (0.06%), 53 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-1_0-producer tid=81155]

--- 520000000 ns (0.06%), 52 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-1_2-producer tid=49923]

--- 520000000 ns (0.06%), 52 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-3_1-producer tid=51203]

--- 520000000 ns (0.06%), 52 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-7 tid=59763]

--- 510000000 ns (0.06%), 51 samples
  [ 0] java.util.concurrent.ConcurrentHashMap.transfer_[j]
  [ 1] java.util.concurrent.ConcurrentHashMap.addCount_[j]
  [ 2] java.util.concurrent.ConcurrentHashMap.putVal_[j]
  [ 3] java.util.concurrent.ConcurrentHashMap.put_[j]
  [ 4] datadog.trace.agent.ot.DDSpanContext.setTag_[j]
  [ 5] datadog.trace.agent.ot.DDSpan.setTag_[j]
  [ 6] datadog.trace.agent.ot.DDSpan.setTag_[j]
  [ 7] datadog.trace.agent.tooling.OpenTracing32$OT32Span.setTag_[j]
  [ 8] datadog.trace.agent.decorator.BaseDecorator.afterStart_[j]
  [ 9] datadog.trace.agent.decorator.ClientDecorator.afterStart_[j]
  [10] datadog.trace.instrumentation.kafka_clients.TracingIterator.next_[j]
  [11] datadog.trace.instrumentation.kafka_clients.TracingIterator.next_[j]
  [12] org.apache.kafka.streams.processor.internals.RecordQueue.addRawRecords_[j]
  [13] org.apache.kafka.streams.processor.internals.PartitionGroup.addRawRecords_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamTask.addRecords_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.addRecordsToTasks_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [19] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 510000000 ns (0.06%), 51 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=8195]

--- 510000000 ns (0.06%), 51 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-0_0-producer tid=81411]

--- 510000000 ns (0.06%), 51 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-0_0-producer tid=81411]

--- 510000000 ns (0.06%), 51 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=11267]

--- 510000000 ns (0.06%), 51 samples
  [ 0] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 1] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 2] G1ParScanThreadState::trim_queue()
  [ 3] G1ParEvacuateFollowersClosure::do_void()
  [ 4] G1ParTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=5379]

--- 510000000 ns (0.06%), 51 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_2-producer tid=52227]

--- 510000000 ns (0.06%), 51 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.ForkJoinPool.awaitWork_[j]
  [ 5] java.util.concurrent.ForkJoinPool.runWorker_[j]
  [ 6] java.util.concurrent.ForkJoinWorkerThread.run_[j]
  [ 7] [ForkJoinPool.commonPool-worker-7 tid=88579]

--- 500000000 ns (0.05%), 50 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.ForkJoinPool.awaitWork_[j]
  [ 5] java.util.concurrent.ForkJoinPool.runWorker_[j]
  [ 6] java.util.concurrent.ForkJoinWorkerThread.run_[j]
  [ 7] [ForkJoinPool.commonPool-worker-2 tid=71683]

--- 500000000 ns (0.05%), 50 samples
  [ 0] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 1] G1ParScanThreadState::trim_queue()
  [ 2] G1ParEvacuateFollowersClosure::do_void()
  [ 3] G1ParTask::work(unsigned int)
  [ 4] GangWorker::loop()
  [ 5] java_start(Thread*)
  [ 6] _pthread_start
  [ 7] thread_start
  [ 8] [tid=8963]

--- 500000000 ns (0.05%), 50 samples
  [ 0] [unknown_Java]
  [ 1] [kafka-producer-network-thread | producer-1 tid=45827]

--- 500000000 ns (0.05%), 50 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-1_2-producer tid=49923]

--- 500000000 ns (0.05%), 50 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=77827]

--- 500000000 ns (0.05%), 50 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-1_0-producer tid=81155]

--- 490000000 ns (0.05%), 49 samples
  [ 0] com.fasterxml.jackson.core.util.ByteArrayBuilder.<init>_[j]
  [ 1] com.fasterxml.jackson.core.util.ByteArrayBuilder.<init>_[j]
  [ 2] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [ 3] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [ 4] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [ 5] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [ 6] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [ 7] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [ 8] java.lang.Thread.run_[j]
  [ 9] [dd-trace-disruptor tid=28675]

--- 490000000 ns (0.05%), 49 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=55555]

--- 490000000 ns (0.05%), 49 samples
  [ 0] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 1] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 2] G1ParScanThreadState::trim_queue()
  [ 3] G1ParEvacuateFollowersClosure::do_void()
  [ 4] G1ParTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=6403]

--- 490000000 ns (0.05%), 49 samples
  [ 0] datadog.trace.agent.common.writer.DDApi$1.writeTo_[j]
  [ 1] okhttp3.internal.http.CallServerInterceptor.intercept_[j]
  [ 2] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [ 3] okhttp3.internal.connection.ConnectInterceptor.intercept_[j]
  [ 4] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [ 5] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [ 6] okhttp3.internal.cache.CacheInterceptor.intercept_[j]
  [ 7] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [ 8] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [ 9] okhttp3.internal.http.BridgeInterceptor.intercept_[j]
  [10] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [11] okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept_[j]
  [12] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [13] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [14] okhttp3.RealCall.getResponseWithInterceptorChain_[j]
  [15] okhttp3.RealCall.execute_[j]
  [16] datadog.trace.agent.common.writer.DDApi.sendSerializedTraces_[j]
  [17] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer$1.run_[j]
  [18] java.util.concurrent.Executors$RunnableAdapter.call_[j]
  [19] java.util.concurrent.FutureTask.run_[j]
  [20] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201_[j]
  [21] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run_[j]
  [22] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [23] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [24] java.lang.Thread.run_[j]
  [25] [dd-trace-writer tid=37635]

--- 490000000 ns (0.05%), 49 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52739]

--- 480000000 ns (0.05%), 48 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=21507]

--- 480000000 ns (0.05%), 48 samples
  [ 0] rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long)
  [ 1] rocksdb::BlockFetcher::ReadBlockContents()
  [ 2] rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::Slice, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, bool, rocksdb::GetContext*)
  [ 3] rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&)
  [ 4] rocksdb::BlockBasedTable::Close()
  [ 5] rocksdb::BlockBasedTable::Close()
  [ 6] rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
  [ 7] rocksdb::MergeIteratorBuilder::Finish()
  [ 8] rocksdb::DBIter::Seek(rocksdb::Slice const&)
  [ 9] Java_org_rocksdb_RocksIterator_seek0
  [10] org.rocksdb.RocksIterator.seek0_[j]
  [11] org.rocksdb.AbstractRocksIterator.seek_[j]
  [12] org.apache.kafka.streams.state.internals.RocksDBRangeIterator.<init>_[j]
  [13] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.range_[j]
  [14] org.apache.kafka.streams.state.internals.RocksDBStore.range_[j]
  [15] org.apache.kafka.streams.state.internals.SegmentIterator.hasNext_[j]
  [16] org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator.hasNext_[j]
  [17] org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator.hasNext_[j]
  [18] org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin$KStreamKStreamJoinProcessor.process_[j]
  [19] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [20] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [21] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [22] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [23] org.apache.kafka.streams.kstream.internals.KStreamJoinWindow$KStreamJoinWindowProcessor.process_[j]
  [24] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [25] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [26] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [27] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [28] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [29] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [30] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [31] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [32] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [33] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [34] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [35] [avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1 tid=82947]

--- 480000000 ns (0.05%), 48 samples
  [ 0] ObjectMonitor::NotRunnable(Thread*, Thread*)
  [ 1] ObjectMonitor::TrySpin_VaryDuration(Thread*)
  [ 2] ObjectMonitor::enter(Thread*)
  [ 3] SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*)
  [ 4] [dd-trace-writer tid=37635]

--- 480000000 ns (0.05%), 48 samples
  [ 0] com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields_[j]
  [ 1] com.fasterxml.jackson.databind.ser.BeanSerializer.serialize_[j]
  [ 2] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents_[j]
  [ 3] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 4] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 5] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize_[j]
  [ 6] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue_[j]
  [ 7] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [ 8] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [ 9] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [10] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [11] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [12] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [13] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [14] java.lang.Thread.run_[j]
  [15] [dd-trace-disruptor tid=28675]

--- 480000000 ns (0.05%), 48 samples
  [ 0] _pthread_cond_wait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] java.lang.Object.wait_[j]
  [ 7] okio.AsyncTimeout.awaitTimeout_[j]
  [ 8] okio.AsyncTimeout$Watchdog.run_[j]
  [ 9] [Okio Watchdog tid=38147]

--- 480000000 ns (0.05%), 48 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-67171b75-0a97-485d-88e6-a32e8efe4db4-StreamThread-1-4_0-producer tid=79363]

--- 480000000 ns (0.05%), 48 samples
  [ 0] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 1] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 2] G1ParScanThreadState::trim_queue()
  [ 3] G1ParEvacuateFollowersClosure::do_void()
  [ 4] G1ParTask::work(unsigned int)
  [ 5] GangWorker::loop()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=5635]

          ns  percent  samples  top
  ----------  -------  -------  ---
 98780000000   10.82%     9878  __psynch_cvwait
 50360000000    5.52%     5036  kevent
 28980000000    3.18%     2898  sendto
 23880000000    2.62%     2388  writev
 22520000000    2.47%     2252  rcmd_af.canonnamebuf
 13480000000    1.48%     1348  [unknown_Java]
 12480000000    1.37%     1248  __unlink
 12020000000    1.32%     1202  _platform_memmove$VARIANT$Haswell
 10910000000    1.20%     1091  write
 10750000000    1.18%     1075  __psynch_mutexwait
 10600000000    1.16%     1060  SpinPause
 10530000000    1.15%     1053  Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  9130000000    1.00%      913  fsync
  8920000000    0.98%      892  __psynch_cvsignal
  8160000000    0.89%      816  pread
  7620000000    0.83%      762  rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long)
  6520000000    0.71%      652  read
  5540000000    0.61%      554  PhaseIdealLoop::idom_no_update(Node*) const
  5350000000    0.59%      535  java.util.HashMap.getNode_[j]
  5250000000    0.58%      525  G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  4390000000    0.48%      439  small_free_list_add_ptr
  4350000000    0.48%      435  void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  3730000000    0.41%      373  java.lang.StringCoding.encode_[j]
  3630000000    0.40%      363  oopDesc::size()
  3570000000    0.39%      357  java.util.concurrent.ConcurrentHashMap.transfer_[j]
  3530000000    0.39%      353  sun.nio.cs.UTF_8$Encoder.encode_[j]
  3420000000    0.37%      342  __gettimeofday
  3410000000    0.37%      341  java.lang.String.hashCode_[j]
  3210000000    0.35%      321  tiny_free_no_lock
  3210000000    0.35%      321  java.util.HashMap.putVal_[j]
  2930000000    0.32%      293  tiny_malloc_from_free_list
  2850000000    0.31%      285  jshort_disjoint_arraycopy
  2830000000    0.31%      283  java.nio.charset.CharsetEncoder.<init>_[j]
  2730000000    0.30%      273  itable stub
  2680000000    0.29%      268  java.util.HashMap$HashIterator.nextNode_[j]
  2590000000    0.28%      259  stat64
  2590000000    0.28%      259  tiny_free_list_add_ptr
  2530000000    0.28%      253  IndexSetIterator::advance_and_next()
  2510000000    0.28%      251  tiny_malloc_should_clear
  2380000000    0.26%      238  ObjectMonitor::TrySpin_VaryDuration(Thread*)
  2380000000    0.26%      238  G1BlockOffsetArrayContigSpace::block_start_unsafe(void const*)
  2340000000    0.26%      234  org.apache.kafka.common.utils.Bytes.compareTo_[j]
  2330000000    0.26%      233  jlong_disjoint_arraycopy
  2320000000    0.25%      232  _platform_memcmp
  2290000000    0.25%      229  G1ParScanThreadState::trim_queue()
  2240000000    0.25%      224  java.util.concurrent.ConcurrentHashMap.get_[j]
  2230000000    0.24%      223  java.util.concurrent.ConcurrentHashMap$Traverser.advance_[j]
  2230000000    0.24%      223  java.util.HashMap$HashIterator.<init>_[j]
  2180000000    0.24%      218  org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
  2110000000    0.23%      211  rocksdb::DataBlockIter::Seek(rocksdb::Slice const&)
  2100000000    0.23%      210  small_free_list_remove_ptr_no_clear
  2080000000    0.23%      208  java.util.Arrays.copyOf_[j]
  2030000000    0.22%      203  JNIMethodBlock::add_method(Method*)
  2020000000    0.22%      202  datadog.trace.agent.ot.DDSpanContext.setTag_[j]
  1940000000    0.21%      194  jbyte_disjoint_arraycopy
  1930000000    0.21%      193  rocksdb::NewBloomFilterPolicy(int, bool)
  1920000000    0.21%      192  __block_descriptor_tmp
  1910000000    0.21%      191  java.lang.String.<init>_[j]
  1900000000    0.21%      190  PhaseChaitin::Split(unsigned int, ResourceArea*)
  1850000000    0.20%      185  [unknown]
  1850000000    0.20%      185  IndexSet::insert(unsigned int)
  1830000000    0.20%      183  java.util.TreeMap.getEntry_[j]
  1820000000    0.20%      182  akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  1810000000    0.20%      181  tiny_size
  1790000000    0.20%      179  java.lang.System.getSecurityManager_[j]
  1750000000    0.19%      175  os::javaTimeNanos()
  1740000000    0.19%      174  org.apache.kafka.common.metrics.Sensor.record_[j]
  1720000000    0.19%      172  java.lang.Long.getChars_[j]
  1710000000    0.19%      171  org.apache.kafka.common.metrics.stats.SampledStat.current_[j]
  1700000000    0.19%      170  sun.nio.cs.UTF_8.newEncoder_[j]
  1690000000    0.19%      169  rocksdb::DataBlockIter::Next()
  1660000000    0.18%      166  ThreadStateTransition::trans_from_native(JavaThreadState)
  1600000000    0.18%      160  PhaseIdealLoop::dom_depth(Node*) const
  1590000000    0.17%      159  java.util.concurrent.ConcurrentHashMap.computeIfAbsent_[j]
  1550000000    0.17%      155  PhaseIdealLoop::is_dominator(Node*, Node*)
  1540000000    0.17%      154  IndexSetIterator::next()
  1520000000    0.17%      152  rocksdb::IndexBlockIter::Seek(rocksdb::Slice const&)
  1510000000    0.17%      151  java.util.HashMap.hash_[j]
  1500000000    0.16%      150  void G1UpdateRSOrPushRefOopClosure::do_oop_nv<unsigned int>(unsigned int*)
  1490000000    0.16%      149  free_tiny
  1490000000    0.16%      149  java.lang.Object.wait_[j]
  1480000000    0.16%      148  rocksdb::MergeIteratorBuilder::Finish()
  1460000000    0.16%      146  ObjectMonitor::NotRunnable(Thread*, Thread*)
  1460000000    0.16%      146  java.math.MutableBigInteger.<init>_[j]
  1440000000    0.16%      144  vtable stub
  1420000000    0.16%      142  java.math.BigInteger.<init>_[j]
  1420000000    0.16%      142  _res
  1420000000    0.16%      142  java.util.HashMap.newNode_[j]
  1400000000    0.15%      140  java.nio.ByteBuffer.<init>_[j]
  1400000000    0.15%      140  void G1ParScanClosure::do_oop_nv<unsigned int>(unsigned int*)
  1400000000    0.15%      140  org.apache.avro.JsonProperties$2.<init>_[j]
  1400000000    0.15%      140  rocksdb::BlockBasedTable::Close()
  1390000000    0.15%      139  _platform_bzero$VARIANT$Haswell
  1380000000    0.15%      138  InstanceKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*)
  1350000000    0.15%      135  PhaseChaitin::build_ifg_physical(ResourceArea*)
  1320000000    0.14%      132  rocksdb::LRUCacheShard::Lookup(rocksdb::Slice const&, unsigned int)
  1320000000    0.14%      132  java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  1310000000    0.14%      131  sun.misc.Unsafe.park_[j]
  1290000000    0.14%      129  java.util.ArrayList$Itr.next_[j]
  1270000000    0.14%      127  SymbolTable::lookup(int, char const*, int, unsigned int)
  1250000000    0.14%      125  java.math.MutableBigInteger.divideMagnitude_[j]
  1250000000    0.14%      125  java.util.Arrays.copyOf_[j]
  1250000000    0.14%      125  org.msgpack.core.MessagePacker.packString_[j]
  1240000000    0.14%      124  java.nio.charset.CharsetEncoder.<init>_[j]
  1230000000    0.13%      123  java.lang.ThreadLocal$ThreadLocalMap.getEntry_[j]
  1230000000    0.13%      123  ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState)
  1230000000    0.13%      123  void G1ParScanThreadState::push_on_queue<unsigned int>(unsigned int*)
  1210000000    0.13%      121  java.util.HashMap.resize_[j]
  1210000000    0.13%      121  CollectedHeap::obj_allocate(KlassHandle, int, Thread*)
  1200000000    0.13%      120  __psynch_mutexdrop
  1200000000    0.13%      120  java.lang.Object.<init>_[j]
  1200000000    0.13%      120  __fcntl
  1190000000    0.13%      119  PhaseChaitin::gather_lrg_masks(bool)
  1160000000    0.13%      116  InstanceKlass::oop_oop_iterate_backwards_nv(oopDesc*, G1ParScanClosure*)
  1140000000    0.12%      114  PhaseAggressiveCoalesce::insert_copies(Matcher&)
  1110000000    0.12%      111  pthread_mutex_lock
  1090000000    0.12%      109  HeapRegion::oops_on_card_seq_iterate_careful(MemRegion, FilterOutOfRegionClosure*, bool, signed char*)
  1090000000    0.12%      109  java.util.concurrent.ConcurrentHashMap.putVal_[j]
  1090000000    0.12%      109  HandleMarkCleaner::~HandleMarkCleaner()
  1070000000    0.12%      107  java.util.concurrent.ConcurrentHashMap$Node.<init>_[j]
  1070000000    0.12%      107  _dispatch_queue_attr_concurrent
  1050000000    0.12%      105  CollectedHeap::array_allocate(KlassHandle, int, int, Thread*)
  1040000000    0.11%      104  std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
  1040000000    0.11%      104  sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  1020000000    0.11%      102  PerRegionTable::add_card_work(int, bool)
  1010000000    0.11%      101  java.util.ArrayList$Itr.<init>_[j]
  1010000000    0.11%      101  __vfprintf
   980000000    0.11%       98  gettimeofday
   980000000    0.11%       98  _pthread_cond_wait
   970000000    0.11%       97  OtherRegionsTable::add_reference(void*, int)
   970000000    0.11%       97  java.lang.AbstractStringBuilder.ensureCapacityInternal_[j]
   960000000    0.11%       96  java.util.ArrayList.elementData_[j]
   960000000    0.11%       96  org.apache.kafka.common.utils.PureJavaCrc32C.update_[j]
   950000000    0.10%       95  rocksdb::Hash(char const*, unsigned long, unsigned int)
   940000000    0.10%       94  CodeHeap::find_start(void*) const
   930000000    0.10%       93  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
   890000000    0.10%       89  PhaseIdealLoop::get_late_ctrl(Node*, Node*)
   880000000    0.10%       88  itable stub
   880000000    0.10%       88  java.util.concurrent.ConcurrentHashMap$Traverser.<init>_[j]
   870000000    0.10%       87  rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
   870000000    0.10%       87  java.util.ArrayList.<init>_[j]
   860000000    0.09%       86  java.nio.charset.CharsetEncoder.onMalformedInput_[j]
   860000000    0.09%       86  free
   860000000    0.09%       86  java.lang.reflect.Method.invoke_[j]
   850000000    0.09%       85  okio.Buffer.write_[j]
   850000000    0.09%       85  com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField_[j]
   840000000    0.09%       84  posix_madvise
   830000000    0.09%       83  org.apache.kafka.common.metrics.Sensor.checkQuotas_[j]
   830000000    0.09%       83  java.math.MutableBigInteger.<init>_[j]
   820000000    0.09%       82  java.math.BigInteger.smallToString_[j]
   810000000    0.09%       81  Arena::contains(void const*) const
   810000000    0.09%       81  java.util.ArrayList.access$000_[j]
   810000000    0.09%       81  java.util.ArrayList.grow_[j]
   810000000    0.09%       81  tiny_free_list_remove_ptr
   800000000    0.09%       80  java.util.concurrent.ConcurrentHashMap$EntryIterator.next_[j]
   800000000    0.09%       80  PhaseLive::compute(unsigned int)
   800000000    0.09%       80  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
   800000000    0.09%       80  NMethodSweeper::process_nmethod(nmethod*)
   780000000    0.09%       78  rocksdb::BlockBuilder::Add(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Slice const*)
   770000000    0.08%       77  CodeHeap::search_freelist(unsigned long, bool)
   770000000    0.08%       77  java.nio.charset.Charset.atBugLevel_[j]
   760000000    0.08%       76  StringTable::buckets_oops_do(OopClosure*, int, int)
   760000000    0.08%       76  rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
   760000000    0.08%       76  set_tiny_meta_header_in_use
   750000000    0.08%       75  RegMask::overlap(RegMask const&) const
   740000000    0.08%       74  org.apache.kafka.common.protocol.types.Schema.read_[j]
   730000000    0.08%       73  java.util.HashMap.get_[j]
   730000000    0.08%       73  pthread_getspecific
   730000000    0.08%       73  rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
   720000000    0.08%       72  java.lang.ThreadLocal$ThreadLocalMap.set_[j]
   700000000    0.08%       70  rocksdb::CompactionIterator::NextFromInput()
   700000000    0.08%       70  pthread_mutex_unlock
   700000000    0.08%       70  rocksdb::ReverseBytewiseComparator()
   700000000    0.08%       70  java.util.concurrent.ConcurrentHashMap.replaceNode_[j]
   700000000    0.08%       70  sun.nio.ch.KQueueArrayWrapper.register0_[j]
   680000000    0.07%       68  java.util.HashMap.computeIfAbsent_[j]
   670000000    0.07%       67  java.util.concurrent.ConcurrentHashMap.tabAt_[j]
   670000000    0.07%       67  org.apache.kafka.common.metrics.stats.Meter.record_[j]
   670000000    0.07%       67  java.util.concurrent.ConcurrentLinkedDeque$Itr.<init>_[j]
   660000000    0.07%       66  java.util.concurrent.ConcurrentHashMap.addCount_[j]
   660000000    0.07%       66  itable stub
   660000000    0.07%       66  h_errno
   650000000    0.07%       65  PhaseIdealLoop::Dominators()
   650000000    0.07%       65  datadog.trace.agent.ot.DDSpanContext.<init>_[j]
   650000000    0.07%       65  java.util.AbstractList.<init>_[j]
   640000000    0.07%       64  _os_semaphore_wait.cold.1
   620000000    0.07%       62  java.lang.Integer.valueOf_[j]
   620000000    0.07%       62  PhaseChaitin::post_allocate_copy_removal()
   610000000    0.07%       61  default_zone_malloc
   610000000    0.07%       61  org.apache.kafka.common.metrics.stats.Rate.record_[j]
   610000000    0.07%       61  java.lang.String.charAt_[j]
   600000000    0.07%       60  Dictionary::get_entry(int, unsigned int, Symbol*, ClassLoaderData*)
   600000000    0.07%       60  G1KlassScanClosure::do_klass(Klass*)
   600000000    0.07%       60  vtable for std::__1::__narrow_to_utf8<16ul>
   590000000    0.06%       59  java.util.HashMap.removeNode_[j]
   590000000    0.06%       59  VectorSet::test_set(unsigned int)
   590000000    0.06%       59  jint_disjoint_arraycopy
   590000000    0.06%       59  rocksdb::MemTable::GetMinLogContainingPrepSection()
   580000000    0.06%       58  java.util.HashMap$Node.<init>_[j]
   580000000    0.06%       58  sun.nio.ch.IOVecWrapper.<init>_[j]
