--- Execution profile ---
Total samples       : 36421
unknown_Java        : 563 (1.55%)
not_walkable_Java   : 35 (0.10%)
deoptimization      : 20 (0.05%)

Frame buffer usage  : 35.9736%

--- 5940000000 ns (1.63%), 594 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] com.lmax.disruptor.SleepingWaitStrategy.applyWaitMethod_[j]
  [ 6] com.lmax.disruptor.SleepingWaitStrategy.waitFor_[j]
  [ 7] com.lmax.disruptor.ProcessingSequenceBarrier.waitFor_[j]
  [ 8] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [ 9] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [10] java.lang.Thread.run_[j]
  [11] [dd-trace-disruptor tid=27651]

--- 4820000000 ns (1.32%), 482 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] os::sleep(Thread*, long, bool)
  [ 3] JVM_Sleep
  [ 4] java.lang.Thread.sleep_[j]
  [ 5] akka.actor.LightArrayRevolverScheduler.waitNanos_[j]
  [ 6] akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick_[j]
  [ 7] akka.actor.LightArrayRevolverScheduler$$anon$3.run_[j]
  [ 8] java.lang.Thread.run_[j]
  [ 9] [GatlingSystem-scheduler-1 tid=86787]

--- 4740000000 ns (1.30%), 474 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos_[j]
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask_[j]
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [dd-cleaner tid=26371]

--- 3160000000 ns (0.87%), 316 samples
  [ 0] sendto
  [ 1] Java_java_net_SocketOutputStream_socketWrite0
  [ 2] java.net.SocketOutputStream.socketWrite0_[j]
  [ 3] java.net.SocketOutputStream.socketWrite_[j]
  [ 4] java.net.SocketOutputStream.write_[j]
  [ 5] okio.Okio$1.write_[j]
  [ 6] okio.AsyncTimeout$1.write_[j]
  [ 7] okio.RealBufferedSink.flush_[j]
  [ 8] okhttp3.internal.http1.Http1Codec$FixedLengthSink.flush_[j]
  [ 9] okio.ForwardingSink.flush_[j]
  [10] okio.RealBufferedSink.flush_[j]
  [11] okio.RealBufferedSink$1.flush_[j]
  [12] org.msgpack.core.buffer.OutputStreamBufferOutput.flush_[j]
  [13] org.msgpack.core.MessagePacker.flush_[j]
  [14] org.msgpack.core.MessagePacker.writePayload_[j]
  [15] org.msgpack.core.MessagePacker.writePayload_[j]
  [16] datadog.trace.agent.common.writer.DDApi$1.writeTo_[j]
  [17] okhttp3.internal.http.CallServerInterceptor.intercept_[j]
  [18] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [19] okhttp3.internal.connection.ConnectInterceptor.intercept_[j]
  [20] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [21] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [22] okhttp3.internal.cache.CacheInterceptor.intercept_[j]
  [23] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [24] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [25] okhttp3.internal.http.BridgeInterceptor.intercept_[j]
  [26] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [27] okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept_[j]
  [28] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [29] okhttp3.internal.http.RealInterceptorChain.proceed_[j]
  [30] okhttp3.RealCall.getResponseWithInterceptorChain_[j]
  [31] okhttp3.RealCall.execute_[j]
  [32] datadog.trace.agent.common.writer.DDApi.sendSerializedTraces_[j]
  [33] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer$1.run_[j]
  [34] java.util.concurrent.Executors$RunnableAdapter.call_[j]
  [35] java.util.concurrent.FutureTask.run_[j]
  [36] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201_[j]
  [37] java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run_[j]
  [38] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [39] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [40] java.lang.Thread.run_[j]
  [41] [dd-trace-writer tid=36611]

--- 2990000000 ns (0.82%), 299 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] java.lang.Object.wait_[j]
  [ 7] okio.AsyncTimeout.awaitTimeout_[j]
  [ 8] okio.AsyncTimeout$Watchdog.run_[j]
  [ 9] [Okio Watchdog tid=37379]

--- 2100000000 ns (0.58%), 210 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [15] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [Thread-7 tid=46339]

--- 1580000000 ns (0.43%), 158 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [Thread-7 tid=46339]

--- 1530000000 ns (0.42%), 153 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=76291]

--- 1510000000 ns (0.41%), 151 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos_[j]
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask_[j]
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [10] [unknown]
  [11] java.lang.Thread.run_[j]
  [12] [dd-cleaner tid=26371]

--- 1430000000 ns (0.39%), 143 samples
  [ 0] [unknown_Java]
  [ 1] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 1190000000 ns (0.33%), 119 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=75567]

--- 1110000000 ns (0.30%), 111 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=76079]

--- 1050000000 ns (0.29%), 105 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [15] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsAsync_[j]
  [16] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.doAutoCommitOffsetsAsync_[j]
  [17] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.maybeAutoCommitOffsetsAsync_[j]
  [18] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll_[j]
  [19] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded_[j]
  [20] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [21] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [22] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [23] java.lang.Thread.run_[j]
  [24] [Thread-7 tid=46339]

--- 1000000000 ns (0.27%), 100 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=75823]

--- 960000000 ns (0.26%), 96 samples
  [ 0] __psynch_cvwait
  [ 1] rocksdb::port::CondVar::Wait()
  [ 2] rocksdb::InstrumentedCondVar::Wait()
  [ 3] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 4] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 5] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 6] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] org.rocksdb.RocksDB.flush_[j]
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [11] org.apache.kafka.streams.state.internals.AbstractSegments.flush_[j]
  [12] org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.MeteredWindowStore.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [18] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [28] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 960000000 ns (0.26%), 96 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=35331]

--- 890000000 ns (0.24%), 89 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] WatcherThread::sleep() const
  [ 5] WatcherThread::run()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=32515]

--- 860000000 ns (0.24%), 86 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | producer-2 tid=45827]

--- 800000000 ns (0.22%), 80 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=28675]

--- 790000000 ns (0.22%), 79 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=35843]

--- 770000000 ns (0.21%), 77 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=75823]

--- 750000000 ns (0.21%), 75 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [21] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 740000000 ns (0.20%), 74 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [10] java.lang.Thread.run_[j]
  [11] [kafka-admin-client-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-admin tid=47107]

--- 700000000 ns (0.19%), 70 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [ 1] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [ 2] java.lang.Thread.run_[j]
  [ 3] [dd-cleaner tid=26371]

--- 700000000 ns (0.19%), 70 samples
  [ 0] [unknown_Java]
  [ 1] [Thread-7 tid=46339]

--- 680000000 ns (0.19%), 68 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [14] java.lang.Thread.run_[j]
  [15] [kafka-admin-client-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-admin tid=47107]

--- 670000000 ns (0.18%), 67 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos_[j]
  [ 7] java.util.concurrent.CountDownLatch.await_[j]
  [ 8] org.apache.kafka.clients.producer.internals.TransactionalRequestResult.await_[j]
  [ 9] org.apache.kafka.clients.producer.KafkaProducer.commitTransaction_[j]
  [10] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [18] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 670000000 ns (0.18%), 67 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_1-producer tid=51203]

--- 660000000 ns (0.18%), 66 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly_[j]
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly_[j]
  [ 8] java.util.concurrent.CountDownLatch.await_[j]
  [ 9] org.apache.kafka.clients.producer.internals.TransactionalRequestResult.await_[j]
  [10] org.apache.kafka.clients.producer.KafkaProducer.sendOffsetsToTransaction_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [14] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [19] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 650000000 ns (0.18%), 65 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [18] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 630000000 ns (0.17%), 63 samples
  [ 0] __psynch_cvwait
  [ 1] rocksdb::port::CondVar::Wait()
  [ 2] rocksdb::InstrumentedCondVar::Wait()
  [ 3] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 4] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 5] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 6] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] org.rocksdb.RocksDB.flush_[j]
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [11] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [27] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 610000000 ns (0.17%), 61 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-admin-client-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-admin tid=47107]

--- 610000000 ns (0.17%), 61 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_2-producer tid=79107]

--- 600000000 ns (0.16%), 60 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-2 tid=45827]

--- 580000000 ns (0.16%), 58 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=29187]

--- 580000000 ns (0.16%), 58 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_0-producer tid=81411]

--- 570000000 ns (0.16%), 57 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_1-producer tid=50435]

--- 550000000 ns (0.15%), 55 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [19] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 550000000 ns (0.15%), 55 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_2-producer tid=50691]

--- 520000000 ns (0.14%), 52 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_1-producer tid=51459]

--- 520000000 ns (0.14%), 52 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=76803]

--- 510000000 ns (0.14%), 51 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=34819]

--- 500000000 ns (0.14%), 50 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_0-producer tid=80643]

--- 500000000 ns (0.14%), 50 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_2-producer tid=50691]

--- 490000000 ns (0.13%), 49 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_0-producer tid=50947]

--- 480000000 ns (0.13%), 48 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52739]

--- 480000000 ns (0.13%), 48 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=76079]

--- 480000000 ns (0.13%), 48 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_1-producer tid=50435]

--- 470000000 ns (0.13%), 47 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=76547]

--- 470000000 ns (0.13%), 47 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52227]

--- 470000000 ns (0.13%), 47 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53507]

--- 460000000 ns (0.13%), 46 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=54019]

--- 460000000 ns (0.13%), 46 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [ 7] [kafka-coordinator-heartbeat-thread | avro-user-benchs-app tid=82691]

--- 460000000 ns (0.13%), 46 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77827]

--- 460000000 ns (0.13%), 46 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_1-producer tid=51459]

--- 460000000 ns (0.13%), 46 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_2-producer tid=51715]

--- 450000000 ns (0.12%), 45 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=76291]

--- 450000000 ns (0.12%), 45 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52483]

--- 440000000 ns (0.12%), 44 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_0-producer tid=81411]

--- 440000000 ns (0.12%), 44 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=78083]

--- 440000000 ns (0.12%), 44 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_2-producer tid=51715]

--- 440000000 ns (0.12%), 44 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=75567]

--- 430000000 ns (0.12%), 43 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=75567]

--- 420000000 ns (0.12%), 42 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53763]

--- 410000000 ns (0.11%), 41 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_0-producer tid=50947]

--- 400000000 ns (0.11%), 40 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=76079]

--- 400000000 ns (0.11%), 40 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_2-producer tid=79107]

--- 390000000 ns (0.11%), 39 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_0-producer tid=81411]

--- 380000000 ns (0.10%), 38 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_1-producer tid=51459]

--- 380000000 ns (0.10%), 38 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] okio.AsyncTimeout.awaitTimeout_[j]
  [ 7] okio.AsyncTimeout$Watchdog.run_[j]
  [ 8] [Okio Watchdog tid=37379]

--- 380000000 ns (0.10%), 38 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53251]

--- 370000000 ns (0.10%), 37 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await_[j]
  [ 6] java.util.concurrent.ArrayBlockingQueue.take_[j]
  [ 7] ch.qos.logback.core.AsyncAppenderBase$Worker.run_[j]
  [ 8] [AsyncAppender-Worker-ASYNC_CONSOLE tid=87043]

--- 370000000 ns (0.10%), 37 samples
  [ 0] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [ 1] java.lang.Thread.run_[j]
  [ 2] [kafka-admin-client-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-admin tid=47107]

--- 370000000 ns (0.10%), 37 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-2 tid=45827]

--- 370000000 ns (0.10%), 37 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=28675]

--- 360000000 ns (0.10%), 36 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77315]

--- 360000000 ns (0.10%), 36 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=75823]

--- 360000000 ns (0.10%), 36 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | producer-1 tid=84739]

--- 360000000 ns (0.10%), 36 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_2-producer tid=50691]

--- 360000000 ns (0.10%), 36 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77571]

--- 350000000 ns (0.10%), 35 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-1 tid=84739]

--- 350000000 ns (0.10%), 35 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)
  [ 4] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 5] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 9] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [10] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [12] rocksdb::DBImpl::BackgroundCallFlush()
  [13] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [14] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [15] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [16] _pthread_start
  [17] thread_start
  [18] [tid=76291]

--- 350000000 ns (0.10%), 35 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77059]

--- 350000000 ns (0.10%), 35 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=75567]

--- 340000000 ns (0.09%), 34 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued_[j]
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire_[j]
  [ 8] java.util.concurrent.locks.ReentrantLock$FairSync.lock_[j]
  [ 9] java.util.concurrent.locks.ReentrantLock.lock_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [12] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [13] [kafka-coordinator-heartbeat-thread | response_consumer_77249219 tid=83715]

--- 340000000 ns (0.09%), 34 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_0-producer tid=48387]

--- 340000000 ns (0.09%), 34 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_2-producer tid=81155]

--- 340000000 ns (0.09%), 34 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=35331]

--- 340000000 ns (0.09%), 34 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=76291]

--- 340000000 ns (0.09%), 34 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=76079]

--- 330000000 ns (0.09%), 33 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_2-producer tid=50691]

--- 330000000 ns (0.09%), 33 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [18] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [19] java.lang.Thread.run_[j]
  [20] [Thread-7 tid=46339]

--- 330000000 ns (0.09%), 33 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_0-producer tid=50947]

--- 330000000 ns (0.09%), 33 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=35331]

--- 320000000 ns (0.09%), 32 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-2 tid=45827]

--- 320000000 ns (0.09%), 32 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_0-producer tid=48899]

--- 320000000 ns (0.09%), 32 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52995]

--- 320000000 ns (0.09%), 32 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_2-producer tid=51715]

--- 320000000 ns (0.09%), 32 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_0-producer tid=50947]

--- 310000000 ns (0.09%), 31 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=75823]

--- 310000000 ns (0.09%), 31 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=76079]

--- 310000000 ns (0.09%), 31 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_0-producer tid=80643]

--- 310000000 ns (0.09%), 31 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=75823]

--- 310000000 ns (0.09%), 31 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_0-producer tid=48899]

--- 310000000 ns (0.09%), 31 samples
  [ 0] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [ 1] [unknown]
  [ 2] java.lang.Thread.run_[j]
  [ 3] [dd-cleaner tid=26371]

--- 310000000 ns (0.09%), 31 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly_[j]
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly_[j]
  [ 8] java.util.concurrent.CountDownLatch.await_[j]
  [ 9] org.apache.kafka.clients.producer.internals.ProduceRequestResult.await_[j]
  [10] org.apache.kafka.clients.producer.internals.RecordAccumulator.awaitFlushCompletion_[j]
  [11] org.apache.kafka.clients.producer.KafkaProducer.flush_[j]
  [12] org.apache.kafka.streams.processor.internals.RecordCollectorImpl.flush_[j]
  [13] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [16] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [17] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [22] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 310000000 ns (0.09%), 31 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_0-producer tid=48387]

--- 310000000 ns (0.09%), 31 samples
  [ 0] __gettimeofday
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos_[j]
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask_[j]
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [dd-cleaner tid=26371]

--- 300000000 ns (0.08%), 30 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_0-producer tid=80643]

--- 300000000 ns (0.08%), 30 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_2-producer tid=79107]

--- 290000000 ns (0.08%), 29 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_2-producer tid=49411]

--- 290000000 ns (0.08%), 29 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=35843]

--- 290000000 ns (0.08%), 29 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_2-producer tid=49411]

--- 290000000 ns (0.08%), 29 samples
  [ 0] __gettimeofday
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] com.lmax.disruptor.SleepingWaitStrategy.applyWaitMethod_[j]
  [ 6] com.lmax.disruptor.SleepingWaitStrategy.waitFor_[j]
  [ 7] com.lmax.disruptor.ProcessingSequenceBarrier.waitFor_[j]
  [ 8] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [ 9] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [10] java.lang.Thread.run_[j]
  [11] [dd-trace-disruptor tid=27651]

--- 290000000 ns (0.08%), 29 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::EnterI(Thread*)
  [ 3] ObjectMonitor::enter(Thread*)
  [ 4] SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*)
  [ 5] org.apache.kafka.clients.consumer.internals.AbstractCoordinator.rejoinNeededOrPending_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.rejoinNeededOrPending_[j]
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [10] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [Thread-7 tid=46339]

--- 290000000 ns (0.08%), 29 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=76291]

--- 280000000 ns (0.08%), 28 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=34563]

--- 280000000 ns (0.08%), 28 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [ 7] [kafka-coordinator-heartbeat-thread | response_consumer_77249219 tid=83715]

--- 280000000 ns (0.08%), 28 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=76291]

--- 280000000 ns (0.08%), 28 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_1-producer tid=50435]

--- 280000000 ns (0.08%), 28 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos_[j]
  [ 6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 7] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take_[j]
  [ 8] java.util.concurrent.ThreadPoolExecutor.getTask_[j]
  [ 9] java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  [10] java.util.concurrent.ThreadPoolExecutor$Worker.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [EventSourcedClient-scheduler-1 tid=71427]

--- 280000000 ns (0.08%), 28 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_2-producer tid=51715]

--- 270000000 ns (0.07%), 27 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=29187]

--- 270000000 ns (0.07%), 27 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_1-producer tid=51459]

--- 270000000 ns (0.07%), 27 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_1-producer tid=81667]

--- 270000000 ns (0.07%), 27 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_0-producer tid=48899]

--- 270000000 ns (0.07%), 27 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=30211]

--- 270000000 ns (0.07%), 27 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_0-producer tid=48387]

--- 270000000 ns (0.07%), 27 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_1-producer tid=51459]

--- 270000000 ns (0.07%), 27 samples
  [ 0] small_free_list_add_ptr
  [ 1] free_small
  [ 2] rocksdb::BlockBasedTable::GetDataBlockFromCache(rocksdb::Slice const&, rocksdb::Slice const&, rocksdb::Cache*, rocksdb::Cache*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, rocksdb::Slice const&, unsigned long, bool, rocksdb::GetContext*)
  [ 3] rocksdb::LRUHandleTable::~LRUHandleTable()
  [ 4] rocksdb::LRUCache::~LRUCache()
  [ 5] Java_org_rocksdb_LRUCache_disposeInternal
  [ 6] org.rocksdb.LRUCache.disposeInternal_[j]
  [ 7] org.rocksdb.RocksObject.disposeInternal_[j]
  [ 8] org.rocksdb.AbstractImmutableNativeReference.close_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore.close_[j]
  [10] org.apache.kafka.streams.state.internals.AbstractSegments.close_[j]
  [11] org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.close_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.close_[j]
  [15] org.apache.kafka.streams.state.internals.MeteredWindowStore.close_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorStateManager.close_[j]
  [17] org.apache.kafka.streams.processor.internals.AbstractTask.closeStateManager_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.closeSuspended_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.close_[j]
  [20] org.apache.kafka.streams.processor.internals.AssignedTasks.close_[j]
  [21] org.apache.kafka.streams.processor.internals.TaskManager.shutdown_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.completeShutdown_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [24] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 270000000 ns (0.07%), 27 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=30211]

--- 260000000 ns (0.07%), 26 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=75567]

--- 260000000 ns (0.07%), 26 samples
  [ 0] __gettimeofday
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] java.lang.Object.wait_[j]
  [ 7] okio.AsyncTimeout.awaitTimeout_[j]
  [ 8] okio.AsyncTimeout$Watchdog.run_[j]
  [ 9] [Okio Watchdog tid=37379]

--- 260000000 ns (0.07%), 26 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=76079]

--- 260000000 ns (0.07%), 26 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park()
  [ 2] ParkCommon(ParkEvent*, long)
  [ 3] Monitor::IWait(Thread*, long)
  [ 4] Monitor::wait(bool, long, bool)
  [ 5] ServiceThread::service_thread_entry(JavaThread*, Thread*)
  [ 6] JavaThread::thread_main_inner()
  [ 7] JavaThread::run()
  [ 8] java_start(Thread*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=32259]

--- 260000000 ns (0.07%), 26 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=76291]

--- 250000000 ns (0.07%), 25 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_1-producer tid=51203]

--- 250000000 ns (0.07%), 25 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_1-producer tid=50435]

--- 250000000 ns (0.07%), 25 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_1-producer tid=81667]

--- 250000000 ns (0.07%), 25 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_1-producer tid=82179]

--- 250000000 ns (0.07%), 25 samples
  [ 0] PhaseChaitin::build_ifg_physical(ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=35331]

--- 250000000 ns (0.07%), 25 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [11] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [12] [kafka-coordinator-heartbeat-thread | avro-user-benchs-app tid=82691]

--- 250000000 ns (0.07%), 25 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=53507]

--- 250000000 ns (0.07%), 25 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)
  [ 4] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 5] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 9] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [10] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [12] rocksdb::DBImpl::BackgroundCallFlush()
  [13] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [14] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [15] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [16] _pthread_start
  [17] thread_start
  [18] [tid=76079]

--- 250000000 ns (0.07%), 25 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=52995]

--- 250000000 ns (0.07%), 25 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_2-producer tid=79107]

--- 250000000 ns (0.07%), 25 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_0-producer tid=81411]

--- 240000000 ns (0.07%), 24 samples
  [ 0] org.apache.kafka.common.utils.Bytes.compareTo_[j]
  [ 1] java.util.TreeMap.getEntry_[j]
  [ 2] java.util.TreeMap.get_[j]
  [ 3] org.apache.kafka.streams.state.internals.NamedCache.getInternal_[j]
  [ 4] org.apache.kafka.streams.state.internals.NamedCache.get_[j]
  [ 5] org.apache.kafka.streams.state.internals.ThreadCache.get_[j]
  [ 6] org.apache.kafka.streams.state.internals.CachingKeyValueStore.getInternal_[j]
  [ 7] org.apache.kafka.streams.state.internals.CachingKeyValueStore.get_[j]
  [ 8] org.apache.kafka.streams.state.internals.CachingKeyValueStore.get_[j]
  [ 9] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.get_[j]
  [10] org.apache.kafka.streams.processor.internals.ProcessorContextImpl$KeyValueStoreReadWriteDecorator.get_[j]
  [11] org.apache.kafka.streams.kstream.internals.KTableSourceValueGetterSupplier$KTableSourceValueGetter.get_[j]
  [12] org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor.process_[j]
  [13] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [14] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [15] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [17] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [19] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [20] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [24] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 240000000 ns (0.07%), 24 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-3 tid=44547]

--- 240000000 ns (0.07%), 24 samples
  [ 0] org.apache.kafka.common.utils.Bytes.compareTo_[j]
  [ 1] java.util.TreeMap.getEntry_[j]
  [ 2] java.util.TreeMap.get_[j]
  [ 3] org.apache.kafka.streams.state.internals.NamedCache.getInternal_[j]
  [ 4] org.apache.kafka.streams.state.internals.NamedCache.get_[j]
  [ 5] org.apache.kafka.streams.state.internals.ThreadCache.get_[j]
  [ 6] org.apache.kafka.streams.state.internals.CachingKeyValueStore.getInternal_[j]
  [ 7] org.apache.kafka.streams.state.internals.CachingKeyValueStore.get_[j]
  [ 8] org.apache.kafka.streams.state.internals.CachingKeyValueStore.get_[j]
  [ 9] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.get_[j]
  [10] org.apache.kafka.streams.processor.internals.ProcessorContextImpl$KeyValueStoreReadWriteDecorator.get_[j]
  [11] org.apache.kafka.streams.kstream.internals.KStreamReduce$KStreamReduceValueGetter.get_[j]
  [12] org.apache.kafka.streams.kstream.internals.KStreamKTableJoinProcessor.process_[j]
  [13] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [14] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [15] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [17] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [19] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [20] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [24] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 240000000 ns (0.07%), 24 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_1-producer tid=82179]

--- 240000000 ns (0.07%), 24 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)
  [ 4] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 5] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 9] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [10] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [12] rocksdb::DBImpl::BackgroundCallFlush()
  [13] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [14] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [15] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [16] _pthread_start
  [17] thread_start
  [18] [tid=75823]

--- 240000000 ns (0.07%), 24 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77315]

--- 240000000 ns (0.07%), 24 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_1-producer tid=50435]

--- 240000000 ns (0.07%), 24 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=29187]

--- 230000000 ns (0.06%), 23 samples
  [ 0] stat64
  [ 1] rocksdb::SstFileManagerImpl::OnAddFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 2] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 3] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 4] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 5] rocksdb::DBImpl::BackgroundCallFlush()
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 7] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 8] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=75823]

--- 230000000 ns (0.06%), 23 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_2-producer tid=81155]

--- 230000000 ns (0.06%), 23 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77571]

--- 230000000 ns (0.06%), 23 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=28675]

--- 230000000 ns (0.06%), 23 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=35843]

--- 230000000 ns (0.06%), 23 samples
  [ 0] PhaseIdealLoop::dom_depth(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=28675]

--- 230000000 ns (0.06%), 23 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_1-producer tid=82179]

--- 220000000 ns (0.06%), 22 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [17] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [18] java.lang.Thread.run_[j]
  [19] [Thread-7 tid=46339]

--- 220000000 ns (0.06%), 22 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=34563]

--- 220000000 ns (0.06%), 22 samples
  [ 0] PhaseIdealLoop::dom_depth(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=35843]

--- 220000000 ns (0.06%), 22 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClientUtils.isReady_[j]
  [10] org.apache.kafka.clients.NetworkClientUtils.awaitReady_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.awaitNodeReady_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_1-producer tid=51203]

--- 220000000 ns (0.06%), 22 samples
  [ 0] sun.misc.Unsafe.park_[j]
  [ 1] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 2] com.lmax.disruptor.SleepingWaitStrategy.applyWaitMethod_[j]
  [ 3] com.lmax.disruptor.SleepingWaitStrategy.waitFor_[j]
  [ 4] com.lmax.disruptor.ProcessingSequenceBarrier.waitFor_[j]
  [ 5] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [ 6] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [ 7] java.lang.Thread.run_[j]
  [ 8] [dd-trace-disruptor tid=27651]

--- 220000000 ns (0.06%), 22 samples
  [ 0] java.lang.reflect.Method.invoke_[j]
  [ 1] com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField_[j]
  [ 2] com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields_[j]
  [ 3] com.fasterxml.jackson.databind.ser.BeanSerializer.serialize_[j]
  [ 4] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents_[j]
  [ 5] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 6] com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize_[j]
  [ 7] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize_[j]
  [ 8] com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue_[j]
  [ 9] com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue_[j]
  [10] com.fasterxml.jackson.databind.ObjectMapper.writeValueAsBytes_[j]
  [11] datadog.trace.agent.common.writer.DDApi.serializeTrace_[j]
  [12] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [13] datadog.trace.agent.common.writer.DDAgentWriter$TraceConsumer.onEvent_[j]
  [14] com.lmax.disruptor.BatchEventProcessor.processEvents_[j]
  [15] com.lmax.disruptor.BatchEventProcessor.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [dd-trace-disruptor tid=27651]

--- 220000000 ns (0.06%), 22 samples
  [ 0] write
  [ 1] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.wakeup_[j]
  [ 4] org.apache.kafka.common.network.Selector.wakeup_[j]
  [ 5] org.apache.kafka.clients.NetworkClient.wakeup_[j]
  [ 6] org.apache.kafka.clients.producer.internals.Sender.wakeup_[j]
  [ 7] org.apache.kafka.clients.producer.KafkaProducer.flush_[j]
  [ 8] org.apache.kafka.streams.processor.internals.RecordCollectorImpl.flush_[j]
  [ 9] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [10] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [18] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 220000000 ns (0.06%), 22 samples
  [ 0] PhaseAggressiveCoalesce::insert_copies(Matcher&)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=28675]

--- 220000000 ns (0.06%), 22 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_1-producer tid=81667]

--- 220000000 ns (0.06%), 22 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-4_0-producer tid=50947]

--- 220000000 ns (0.06%), 22 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_1-producer tid=51203]

--- 220000000 ns (0.06%), 22 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)
  [ 4] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 5] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 9] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [10] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [12] rocksdb::DBImpl::BackgroundCallFlush()
  [13] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [14] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [15] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [16] _pthread_start
  [17] thread_start
  [18] [tid=75567]

--- 220000000 ns (0.06%), 22 samples
  [ 0] PhaseIdealLoop::dom_depth(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=29187]

--- 220000000 ns (0.06%), 22 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-1 tid=84739]

--- 210000000 ns (0.06%), 21 samples
  [ 0] OopMapSet::find_map_at_offset(int) const
  [ 1] OopMapSet::update_register_map(frame const*, RegisterMap*)
  [ 2] frame::sender_for_compiled_frame(RegisterMap*) const
  [ 3] frame::sender(RegisterMap*) const
  [ 4] StackFrameStream::next()
  [ 5] JavaThread::nmethods_do(CodeBlobClosure*)
  [ 6] Threads::nmethods_do(CodeBlobClosure*)
  [ 7] SafepointSynchronize::do_cleanup_tasks()
  [ 8] SafepointSynchronize::begin()
  [ 9] VMThread::loop()
  [10] VMThread::run()
  [11] java_start(Thread*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=15107]

--- 210000000 ns (0.06%), 21 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [11] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [12] [kafka-coordinator-heartbeat-thread | response_consumer_77249219 tid=83715]

--- 210000000 ns (0.06%), 21 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77827]

--- 210000000 ns (0.06%), 21 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.read_[j]
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer_[j]
  [ 4] sun.nio.ch.IOUtil.read_[j]
  [ 5] sun.nio.ch.SocketChannelImpl.read_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.read_[j]
  [ 7] org.apache.kafka.common.network.NetworkReceive.readFrom_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.receive_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.read_[j]
  [10] org.apache.kafka.common.network.Selector.attemptRead_[j]
  [11] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [12] org.apache.kafka.common.network.Selector.poll_[j]
  [13] org.apache.kafka.clients.NetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [15] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [18] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [23] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 210000000 ns (0.06%), 21 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_1-producer tid=51203]

--- 210000000 ns (0.06%), 21 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_2-producer tid=49411]

--- 210000000 ns (0.06%), 21 samples
  [ 0] PhaseChaitin::build_ifg_physical(ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=28675]

--- 210000000 ns (0.06%), 21 samples
  [ 0] __psynch_cvsignal
  [ 1] std::__1::condition_variable::notify_one()
  [ 2] rocksdb::ThreadPoolImpl::Impl::Submit(std::__1::function<void ()>&&, std::__1::function<void ()>&&, void*)
  [ 3] rocksdb::ThreadPoolImpl::Schedule(void (*)(void*), void*, void*, void (*)(void*))
  [ 4] rocksdb::DBImpl::MaybeScheduleFlushOrCompaction()
  [ 5] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 6] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.rocksdb.RocksDB.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [11] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [18] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [28] [avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1 tid=47363]

--- 210000000 ns (0.06%), 21 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=54019]

--- 210000000 ns (0.06%), 21 samples
  [ 0] java.lang.Thread.sleep_[j]
  [ 1] akka.actor.LightArrayRevolverScheduler.waitNanos_[j]
  [ 2] akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick_[j]
  [ 3] akka.actor.LightArrayRevolverScheduler$$anon$3.run_[j]
  [ 4] java.lang.Thread.run_[j]
  [ 5] [GatlingSystem-scheduler-1 tid=86787]

--- 210000000 ns (0.06%), 21 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=75823]

--- 210000000 ns (0.06%), 21 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=34819]

--- 210000000 ns (0.06%), 21 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClientUtils.isReady_[j]
  [10] org.apache.kafka.clients.NetworkClientUtils.awaitReady_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.awaitNodeReady_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-0_0-producer tid=48387]

--- 210000000 ns (0.06%), 21 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-1_0-producer tid=48899]

--- 210000000 ns (0.06%), 21 samples
  [ 0] Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  [ 1] G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
  [ 2] void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
  [ 3] G1ParScanThreadState::trim_queue()
  [ 4] G1ParEvacuateFollowersClosure::do_void()
  [ 5] G1ParTask::work(unsigned int)
  [ 6] GangWorker::loop()
  [ 7] java_start(Thread*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=10243]

--- 210000000 ns (0.06%), 21 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=34307]

--- 200000000 ns (0.05%), 20 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=75567]

--- 200000000 ns (0.05%), 20 samples
  [ 0] PhaseIdealLoop::Dominators()
  [ 1] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 2] Compile::Optimize()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=29187]

--- 200000000 ns (0.05%), 20 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-3_1-producer tid=51203]

--- 200000000 ns (0.05%), 20 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] ConcurrentG1RefineThread::run_young_rs_sampling()
  [ 5] ConcurrentG1RefineThread::run()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=20483]

--- 200000000 ns (0.05%), 20 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-2 tid=45827]

--- 200000000 ns (0.05%), 20 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClientUtils.isReady_[j]
  [10] org.apache.kafka.clients.NetworkClientUtils.awaitReady_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.awaitNodeReady_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-4828b25c-da85-40fa-89f2-c203e5064b87-StreamThread-1-2_0-producer tid=81411]

--- 200000000 ns (0.05%), 20 samples
  [ 0] stat64
  [ 1] rocksdb::SstFileManagerImpl::OnAddFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 2] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 3] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 4] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 5] rocksdb::DBImpl::BackgroundCallFlush()
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 7] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 8] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=76079]

--- 200000000 ns (0.05%), 20 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=77059]

          ns  percent  samples  top
  ----------  -------  -------  ---
 37750000000   10.36%     3775  __psynch_cvwait
 27380000000    7.52%     2738  kevent
 13160000000    3.61%     1316  writev
 11930000000    3.28%     1193  rcmd_af.canonnamebuf
  6440000000    1.77%      644  __unlink
  5230000000    1.44%      523  [unknown_Java]
  4990000000    1.37%      499  PhaseIdealLoop::idom_no_update(Node*) const
  4690000000    1.29%      469  write
  4490000000    1.23%      449  fsync
  4300000000    1.18%      430  __psynch_mutexwait
  4200000000    1.15%      420  SpinPause
  3530000000    0.97%      353  _platform_memmove$VARIANT$Haswell
  3220000000    0.88%      322  sendto
  2800000000    0.77%      280  read
  2720000000    0.75%      272  IndexSetIterator::advance_and_next()
  2620000000    0.72%      262  __psynch_cvsignal
  2230000000    0.61%      223  java.util.HashMap.getNode_[j]
  2170000000    0.60%      217  JNIMethodBlock::add_method(Method*)
  2070000000    0.57%      207  PhaseChaitin::Split(unsigned int, ResourceArea*)
  2040000000    0.56%      204  Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
  1860000000    0.51%      186  IndexSet::insert(unsigned int)
  1600000000    0.44%      160  IndexSetIterator::next()
  1550000000    0.43%      155  PhaseIdealLoop::dom_depth(Node*) const
  1480000000    0.41%      148  PhaseIdealLoop::is_dominator(Node*, Node*)
  1420000000    0.39%      142  __gettimeofday
  1350000000    0.37%      135  org.apache.kafka.common.metrics.stats.SampledStat.current_[j]
  1340000000    0.37%      134  PhaseChaitin::build_ifg_physical(ResourceArea*)
  1290000000    0.35%      129  tiny_free_no_lock
  1280000000    0.35%      128  tiny_malloc_should_clear
  1250000000    0.34%      125  _platform_bzero$VARIANT$Haswell
  1200000000    0.33%      120  PhaseChaitin::gather_lrg_masks(bool)
  1200000000    0.33%      120  __block_descriptor_tmp
  1190000000    0.33%      119  stat64
  1140000000    0.31%      114  tiny_malloc_from_free_list
  1100000000    0.30%      110  java.util.HashMap$HashIterator.nextNode_[j]
  1090000000    0.30%      109  java.util.concurrent.ThreadPoolExecutor.runWorker_[j]
  1050000000    0.29%      105  PhaseAggressiveCoalesce::insert_copies(Matcher&)
  1050000000    0.29%      105  java.lang.String.hashCode_[j]
  1030000000    0.28%      103  pread
  1030000000    0.28%      103  itable stub
  1010000000    0.28%      101  akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  1010000000    0.28%      101  rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long)
  1000000000    0.27%      100  G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
   980000000    0.27%       98  tiny_free_list_add_ptr
   920000000    0.25%       92  void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
   890000000    0.24%       89  Arena::contains(void const*) const
   880000000    0.24%       88  PhaseIdealLoop::Dominators()
   860000000    0.24%       86  jshort_disjoint_arraycopy
   830000000    0.23%       83  binary_search(Array<Method*>*, Symbol*)
   820000000    0.23%       82  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
   820000000    0.23%       82  tiny_size
   810000000    0.22%       81  PhaseLive::compute(unsigned int)
   800000000    0.22%       80  java.util.HashMap.putVal_[j]
   750000000    0.21%       75  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
   720000000    0.20%       72  org.apache.kafka.common.metrics.Sensor.record_[j]
   710000000    0.19%       71  StringTable::buckets_oops_do(OopClosure*, int, int)
   710000000    0.19%       71  SymbolTable::lookup(int, char const*, int, unsigned int)
   710000000    0.19%       71  sun.misc.Unsafe.park_[j]
   700000000    0.19%       70  PhaseIdealLoop::get_late_ctrl(Node*, Node*)
   700000000    0.19%       70  small_free_list_add_ptr
   700000000    0.19%       70  java.util.concurrent.ConcurrentHashMap.get_[j]
   690000000    0.19%       69  __fcntl
   670000000    0.18%       67  RegMask::overlap(RegMask const&) const
   640000000    0.18%       64  IndexSet::initialize(unsigned int)
   640000000    0.18%       64  CodeHeap::find_start(void*) const
   640000000    0.18%       64  G1BlockOffsetArrayContigSpace::block_start_unsafe(void const*)
   620000000    0.17%       62  org.apache.kafka.common.utils.Bytes.compareTo_[j]
   620000000    0.17%       62  CodeHeap::search_freelist(unsigned long, bool)
   620000000    0.17%       62  java.util.HashMap$HashIterator.<init>_[j]
   620000000    0.17%       62  free_tiny
   620000000    0.17%       62  PhaseChaitin::post_allocate_copy_removal()
   620000000    0.17%       62  NMethodSweeper::process_nmethod(nmethod*)
   600000000    0.16%       60  java.util.HashMap.newNode_[j]
   590000000    0.16%       59  RegMask::Size() const
   590000000    0.16%       59  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
   580000000    0.16%       58  sun.nio.cs.UTF_8$Encoder.encode_[j]
   570000000    0.16%       57  DIR_Chunk::find_match(GrowableArray<DIR_Chunk*>*, int, DebugInformationRecorder*)
   570000000    0.16%       57  java.util.concurrent.ConcurrentHashMap.transfer_[j]
   570000000    0.16%       57  si_module_static_search.search_vtable
   570000000    0.16%       57  java.util.ArrayList$Itr.next_[j]
   560000000    0.15%       56  VectorSet::test_set(unsigned int)
   560000000    0.15%       56  jlong_disjoint_arraycopy
   550000000    0.15%       55  __vfprintf
   540000000    0.15%       54  java.util.Objects.equals_[j]
   540000000    0.15%       54  java.util.HashMap.hash_[j]
   530000000    0.15%       53  ObjectMonitor::TrySpin_VaryDuration(Thread*)
   520000000    0.14%       52  oopDesc::size()
   520000000    0.14%       52  _platform_memcmp
   520000000    0.14%       52  __psynch_mutexdrop
   500000000    0.14%       50  java.lang.StringCoding.encode_[j]
   490000000    0.13%       49  org.apache.kafka.common.metrics.Sensor.checkQuotas_[j]
   470000000    0.13%       47  _res
   470000000    0.13%       47  [unknown]
   470000000    0.13%       47  G1KlassScanClosure::do_klass(Klass*)
   460000000    0.13%       46  java.lang.String.<init>_[j]
   450000000    0.12%       45  os::javaTimeNanos()
   450000000    0.12%       45  I2C/C2I adapters(0xb0000000)@0x000000010e3a4c60
   450000000    0.12%       45  org.apache.kafka.common.metrics.stats.Rate.record_[j]
   440000000    0.12%       44  java.lang.String.substring_[j]
   440000000    0.12%       44  vtable stub
   440000000    0.12%       44  CollectedHeap::obj_allocate(KlassHandle, int, Thread*)
   430000000    0.12%       43  java.util.HashMap.resize_[j]
   420000000    0.12%       42  jbyte_disjoint_arraycopy
   410000000    0.11%       41  Block::end_idx() const
   410000000    0.11%       41  java.util.LinkedHashMap$LinkedHashIterator.nextNode_[j]
   400000000    0.11%       40  Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum)
   400000000    0.11%       40  sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
   400000000    0.11%       40  pthread_getspecific
   400000000    0.11%       40  java.util.Arrays.copyOf_[j]
   400000000    0.11%       40  PhaseIdealLoop::has_node(Node*) const
   400000000    0.11%       40  CodeHeap::next_free(HeapBlock*) const
   390000000    0.11%       39  pthread_mutex_lock
   390000000    0.11%       39  Node::add_out(Node*)
   390000000    0.11%       39  Node::del_out(Node*)
   390000000    0.11%       39  G1ParScanThreadState::trim_queue()
   380000000    0.10%       38  IndexSet::remove(unsigned int)
   380000000    0.10%       38  Node::dominates(Node*, Node_List&)
   370000000    0.10%       37  org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
   370000000    0.10%       37  java.lang.ThreadLocal.get_[j]
   370000000    0.10%       37  java.util.ArrayList$Itr.<init>_[j]
   360000000    0.10%       36  PhaseIdealLoop::build_loop_tree()
   360000000    0.10%       36  java.util.HashMap.get_[j]
   360000000    0.10%       36  ThreadStateTransition::trans_from_native(JavaThreadState)
   350000000    0.10%       35  sun.nio.ch.Util$BufferCache.get_[j]
   350000000    0.10%       35  java.nio.ByteBuffer.<init>_[j]
   350000000    0.10%       35  yperr_string.err
   350000000    0.10%       35  org.apache.kafka.common.protocol.types.Schema.read_[j]
   340000000    0.09%       34  java.util.concurrent.ConcurrentHashMap$Traverser.advance_[j]
   340000000    0.09%       34  java.nio.charset.CharsetEncoder.onMalformedInput_[j]
   340000000    0.09%       34  java.util.ArrayList.access$000_[j]
   340000000    0.09%       34  free
   330000000    0.09%       33  java.nio.charset.CharsetEncoder.<init>_[j]
   330000000    0.09%       33  ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState)
   320000000    0.09%       32  org.apache.kafka.common.metrics.stats.Meter.record_[j]
   320000000    0.09%       32  ObjectMonitor::NotRunnable(Thread*, Thread*)
   320000000    0.09%       32  java.lang.ThreadLocal$ThreadLocalMap.getEntry_[j]
   320000000    0.09%       32  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*)
   310000000    0.09%       31  set_tiny_meta_header_in_use
   310000000    0.09%       31  NodeHash::hash_find_insert(Node*)
   310000000    0.09%       31  PhaseIdealLoop::get_ctrl_no_update(Node*) const
   300000000    0.08%       30  sun.nio.ch.KQueueArrayWrapper.register0_[j]
   300000000    0.08%       30  java.lang.Integer.valueOf_[j]
   300000000    0.08%       30  PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&)
   300000000    0.08%       30  ftruncate
   300000000    0.08%       30  datadog.trace.agent.ot.DDSpanContext.setTag_[j]
   300000000    0.08%       30  rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
   300000000    0.08%       30  Dict::Insert(void*, void*, bool)
   300000000    0.08%       30  HandleMarkCleaner::~HandleMarkCleaner()
   300000000    0.08%       30  java.util.Arrays.copyOf_[j]
   290000000    0.08%       29  PhaseIFG::effective_degree(unsigned int) const
   290000000    0.08%       29  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
   290000000    0.08%       29  java.lang.Object.<init>_[j]
   290000000    0.08%       29  java.util.concurrent.ConcurrentHashMap.putVal_[j]
   290000000    0.08%       29  java.lang.System.getSecurityManager_[j]
   280000000    0.08%       28  Symbol::increment_refcount()
   280000000    0.08%       28  _pthread_cond_wait
   270000000    0.07%       27  gettimeofday
   270000000    0.07%       27  java.lang.Long.getChars_[j]
   260000000    0.07%       26  java.util.TreeMap.getEntry_[j]
   260000000    0.07%       26  CollectedHeap::array_allocate(KlassHandle, int, int, Thread*)
   260000000    0.07%       26  IndexSetIterator::IndexSetIterator(IndexSet*)
   260000000    0.07%       26  org.msgpack.jackson.dataformat.MessagePackGenerator.pack_[j]
   260000000    0.07%       26  _dispatch_queue_attr_concurrent
   260000000    0.07%       26  RegMask::smear_to_sets(int)
   260000000    0.07%       26  void G1ParScanClosure::do_oop_nv<unsigned int>(unsigned int*)
   260000000    0.07%       26  PhaseIdealLoop::build_loop_late_post(Node*)
   260000000    0.07%       26  IndexSet::alloc_block()
   260000000    0.07%       26  Node::find_exact_control(Node*)
   260000000    0.07%       26  java.math.MutableBigInteger.<init>_[j]
   260000000    0.07%       26  tiny_free_list_remove_ptr
   250000000    0.07%       25  Matcher::xform(Node*, int)
   250000000    0.07%       25  java.math.MutableBigInteger.divideMagnitude_[j]
   250000000    0.07%       25  org.apache.kafka.common.utils.PureJavaCrc32C.update_[j]
   250000000    0.07%       25  Unique_Node_List::push(Node*)
   250000000    0.07%       25  java.util.HashMap$Node.<init>_[j]
   250000000    0.07%       25  java.nio.charset.CharsetEncoder.<init>_[j]
   250000000    0.07%       25  java.util.HashMap.removeNode_[j]
   250000000    0.07%       25  org.msgpack.core.MessagePacker.packString_[j]
   250000000    0.07%       25  h_errno
   240000000    0.07%       24  __psynch_cvbroad
   240000000    0.07%       24  small_free_list_remove_ptr_no_clear
   240000000    0.07%       24  PhaseIdealLoop::get_ctrl(Node*)
   240000000    0.07%       24  vtable stub
   240000000    0.07%       24  java.lang.Long.valueOf_[j]
   240000000    0.07%       24  Dictionary::get_entry(int, unsigned int, Symbol*, ClassLoaderData*)
   240000000    0.07%       24  org.apache.kafka.common.TopicPartition.equals_[j]
   230000000    0.06%       23  posix_madvise
   230000000    0.06%       23  PhaseIterGVN::subsume_node(Node*, Node*)
   230000000    0.06%       23  NodeHash::hash_delete(Node const*)
   230000000    0.06%       23  org.apache.kafka.common.protocol.types.Schema.get_[j]
   230000000    0.06%       23  java.util.LinkedHashMap$LinkedHashIterator.<init>_[j]
   230000000    0.06%       23  std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
   230000000    0.06%       23  java.util.concurrent.ConcurrentHashMap.tabAt_[j]
   230000000    0.06%       23  rocksdb::BlockBasedTable::Close()
   230000000    0.06%       23  org.apache.avro.JsonProperties$2.<init>_[j]
   230000000    0.06%       23  MergeMemNode::Ideal(PhaseGVN*, bool)
   230000000    0.06%       23  OopMapSet::find_map_at_offset(int) const
   230000000    0.06%       23  java.util.ArrayList.<init>_[j]
   230000000    0.06%       23  PhaseChaitin::Simplify()
   230000000    0.06%       23  InstanceKlass::oop_oop_iterate_nv(oopDesc*, FilterOutOfRegionClosure*)
