--- Execution profile ---
Total samples       : 15297
unknown_Java        : 258 (1.69%)
not_walkable_Java   : 16 (0.10%)
deoptimization      : 3 (0.02%)

Frame buffer usage  : 15.5016%

--- 1970000000 ns (1.29%), 197 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] os::sleep(Thread*, long, bool)
  [ 3] JVM_Sleep
  [ 4] java.lang.Thread.sleep_[j]
  [ 5] akka.actor.LightArrayRevolverScheduler.waitNanos_[j]
  [ 6] akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick_[j]
  [ 7] akka.actor.LightArrayRevolverScheduler$$anon$3.run_[j]
  [ 8] java.lang.Thread.run_[j]
  [ 9] [GatlingSystem-scheduler-1 tid=36099]

--- 1870000000 ns (1.22%), 187 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [15] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [Thread-3 tid=87043]

--- 1080000000 ns (0.71%), 108 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [Thread-3 tid=87043]

--- 980000000 ns (0.64%), 98 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [15] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsAsync_[j]
  [16] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.doAutoCommitOffsetsAsync_[j]
  [17] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.maybeAutoCommitOffsetsAsync_[j]
  [18] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll_[j]
  [19] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded_[j]
  [20] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [21] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [22] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [23] java.lang.Thread.run_[j]
  [24] [Thread-3 tid=87043]

--- 820000000 ns (0.54%), 82 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=79619]

--- 810000000 ns (0.53%), 81 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=79503]

--- 790000000 ns (0.52%), 79 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=51795]

--- 680000000 ns (0.44%), 68 samples
  [ 0] __psynch_cvwait
  [ 1] rocksdb::port::CondVar::Wait()
  [ 2] rocksdb::InstrumentedCondVar::Wait()
  [ 3] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 4] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 5] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 6] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] org.rocksdb.RocksDB.flush_[j]
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [11] org.apache.kafka.streams.state.internals.AbstractSegments.flush_[j]
  [12] org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.MeteredWindowStore.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [18] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [28] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 680000000 ns (0.44%), 68 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=52051]

--- 660000000 ns (0.43%), 66 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=29443]

--- 610000000 ns (0.40%), 61 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [14] java.lang.Thread.run_[j]
  [15] [kafka-admin-client-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-admin tid=44547]

--- 510000000 ns (0.33%), 51 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=30723]

--- 480000000 ns (0.31%), 48 samples
  [ 0] [unknown_Java]
  [ 1] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 440000000 ns (0.29%), 44 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly_[j]
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly_[j]
  [ 8] java.util.concurrent.CountDownLatch.await_[j]
  [ 9] org.apache.kafka.clients.producer.internals.TransactionalRequestResult.await_[j]
  [10] org.apache.kafka.clients.producer.KafkaProducer.sendOffsetsToTransaction_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [14] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [19] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 430000000 ns (0.28%), 43 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | producer-2 tid=33539]

--- 430000000 ns (0.28%), 43 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [18] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 410000000 ns (0.27%), 41 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] WatcherThread::sleep() const
  [ 5] WatcherThread::run()
  [ 6] java_start(Thread*)
  [ 7] _pthread_start
  [ 8] thread_start
  [ 9] [tid=37123]

--- 410000000 ns (0.27%), 41 samples
  [ 0] [unknown_Java]
  [ 1] [Thread-3 tid=87043]

--- 400000000 ns (0.26%), 40 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [21] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 390000000 ns (0.25%), 39 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [10] java.lang.Thread.run_[j]
  [11] [kafka-admin-client-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-admin tid=44547]

--- 380000000 ns (0.25%), 38 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-admin-client-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-admin tid=44547]

--- 360000000 ns (0.24%), 36 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-3 tid=35331]

--- 360000000 ns (0.24%), 36 samples
  [ 0] __psynch_cvwait
  [ 1] rocksdb::port::CondVar::Wait()
  [ 2] rocksdb::InstrumentedCondVar::Wait()
  [ 3] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 4] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 5] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 6] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] org.rocksdb.RocksDB.flush_[j]
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [11] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [16] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [27] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 350000000 ns (0.23%), 35 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-2 tid=32515]

--- 350000000 ns (0.23%), 35 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-2 tid=33539]

--- 340000000 ns (0.22%), 34 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=30211]

--- 340000000 ns (0.22%), 34 samples
  [ 0] org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
  [ 1] java.lang.Thread.run_[j]
  [ 2] [kafka-admin-client-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-admin tid=44547]

--- 330000000 ns (0.22%), 33 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [12] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [13] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [14] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [19] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 320000000 ns (0.21%), 32 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [ 7] [kafka-coordinator-heartbeat-thread | avro-user-benchs-app tid=85251]

--- 300000000 ns (0.20%), 30 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=40451]

--- 290000000 ns (0.19%), 29 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_2-producer tid=82691]

--- 280000000 ns (0.18%), 28 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.parkNanos_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos_[j]
  [ 7] java.util.concurrent.CountDownLatch.await_[j]
  [ 8] org.apache.kafka.clients.producer.internals.TransactionalRequestResult.await_[j]
  [ 9] org.apache.kafka.clients.producer.KafkaProducer.commitTransaction_[j]
  [10] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [18] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 280000000 ns (0.18%), 28 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_2-producer tid=82691]

--- 270000000 ns (0.18%), 27 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=49411]

--- 260000000 ns (0.17%), 26 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt_[j]
  [ 6] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly_[j]
  [ 7] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly_[j]
  [ 8] java.util.concurrent.CountDownLatch.await_[j]
  [ 9] org.apache.kafka.clients.producer.internals.ProduceRequestResult.await_[j]
  [10] org.apache.kafka.clients.producer.internals.RecordAccumulator.awaitFlushCompletion_[j]
  [11] org.apache.kafka.clients.producer.KafkaProducer.flush_[j]
  [12] org.apache.kafka.streams.processor.internals.RecordCollectorImpl.flush_[j]
  [13] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [16] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [17] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [18] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [22] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 260000000 ns (0.17%), 26 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=79503]

--- 260000000 ns (0.17%), 26 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_1-producer tid=81667]

--- 260000000 ns (0.17%), 26 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=39939]

--- 260000000 ns (0.17%), 26 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_2-producer tid=48387]

--- 250000000 ns (0.16%), 25 samples
  [ 0] [unknown_Java]
  [ 1] [kafka-producer-network-thread | producer-2 tid=33539]

--- 250000000 ns (0.16%), 25 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_0-producer tid=46851]

--- 250000000 ns (0.16%), 25 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_0-producer tid=82435]

--- 250000000 ns (0.16%), 25 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=80131]

--- 240000000 ns (0.16%), 24 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=79619]

--- 240000000 ns (0.16%), 24 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_0-producer tid=26891]

--- 240000000 ns (0.16%), 24 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_1-producer tid=82947]

--- 230000000 ns (0.15%), 23 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_1-producer tid=82947]

--- 230000000 ns (0.15%), 23 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_0-producer tid=82435]

--- 230000000 ns (0.15%), 23 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=50435]

--- 230000000 ns (0.15%), 23 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=48899]

--- 230000000 ns (0.15%), 23 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_1-producer tid=47875]

--- 230000000 ns (0.15%), 23 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=30723]

--- 230000000 ns (0.15%), 23 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=49667]

--- 230000000 ns (0.15%), 23 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.read_[j]
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer_[j]
  [ 4] sun.nio.ch.IOUtil.read_[j]
  [ 5] sun.nio.ch.SocketChannelImpl.read_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.read_[j]
  [ 7] org.apache.kafka.common.network.NetworkReceive.readFrom_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.receive_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.read_[j]
  [10] org.apache.kafka.common.network.Selector.attemptRead_[j]
  [11] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [12] org.apache.kafka.common.network.Selector.poll_[j]
  [13] org.apache.kafka.clients.NetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [15] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [18] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [23] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 220000000 ns (0.14%), 22 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_0-producer tid=46851]

--- 220000000 ns (0.14%), 22 samples
  [ 0] akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick_[j]
  [ 1] akka.actor.LightArrayRevolverScheduler$$anon$3.run_[j]
  [ 2] java.lang.Thread.run_[j]
  [ 3] [GatlingSystem-scheduler-1 tid=36099]

--- 220000000 ns (0.14%), 22 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=52051]

--- 220000000 ns (0.14%), 22 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=79619]

--- 210000000 ns (0.14%), 21 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=29443]

--- 210000000 ns (0.14%), 21 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_1-producer tid=82947]

--- 210000000 ns (0.14%), 21 samples
  [ 0] __psynch_cvsignal
  [ 1] std::__1::condition_variable::notify_one()
  [ 2] rocksdb::ThreadPoolImpl::Impl::Submit(std::__1::function<void ()>&&, std::__1::function<void ()>&&, void*)
  [ 3] rocksdb::ThreadPoolImpl::Schedule(void (*)(void*), void*, void*, void (*)(void*))
  [ 4] rocksdb::DBImpl::MaybeScheduleFlushOrCompaction()
  [ 5] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 6] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.rocksdb.RocksDB.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [11] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [18] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [28] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 210000000 ns (0.14%), 21 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_0-producer tid=26891]

--- 210000000 ns (0.14%), 21 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_0-producer tid=84739]

--- 210000000 ns (0.14%), 21 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::EnterI(Thread*)
  [ 3] ObjectMonitor::enter(Thread*)
  [ 4] SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*)
  [ 5] org.apache.kafka.clients.consumer.internals.AbstractCoordinator.rejoinNeededOrPending_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.rejoinNeededOrPending_[j]
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [10] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [Thread-3 tid=87043]

--- 210000000 ns (0.14%), 21 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=50947]

--- 210000000 ns (0.14%), 21 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=79875]

--- 210000000 ns (0.14%), 21 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-2 tid=33539]

--- 210000000 ns (0.14%), 21 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=51459]

--- 200000000 ns (0.13%), 20 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] java.util.concurrent.locks.LockSupport.park_[j]
  [ 5] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await_[j]
  [ 6] java.util.concurrent.ArrayBlockingQueue.take_[j]
  [ 7] ch.qos.logback.core.AsyncAppenderBase$Worker.run_[j]
  [ 8] [AsyncAppender-Worker-ASYNC_CONSOLE tid=32259]

--- 200000000 ns (0.13%), 20 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_2-producer tid=48387]

--- 200000000 ns (0.13%), 20 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=49923]

--- 200000000 ns (0.13%), 20 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=52051]

--- 200000000 ns (0.13%), 20 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_2-producer tid=48387]

--- 190000000 ns (0.12%), 19 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=50179]

--- 190000000 ns (0.12%), 19 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::BackgroundCallFlush()
  [ 5] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 7] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 8] _pthread_start
  [ 9] thread_start
  [10] [tid=51795]

--- 180000000 ns (0.12%), 18 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=50691]

--- 180000000 ns (0.12%), 18 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_1-producer tid=84483]

--- 180000000 ns (0.12%), 18 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::wait(long, bool, Thread*)
  [ 3] ObjectSynchronizer::wait(Handle, long, Thread*)
  [ 4] JVM_MonitorWait
  [ 5] java.lang.Object.wait_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [ 7] [kafka-coordinator-heartbeat-thread | response_consumer_81c66347 tid=86531]

--- 180000000 ns (0.12%), 18 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_2-producer tid=81411]

--- 180000000 ns (0.12%), 18 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=52051]

--- 180000000 ns (0.12%), 18 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_1-producer tid=81667]

--- 180000000 ns (0.12%), 18 samples
  [ 0] [unknown_Java]
  [ 1] [kafka-admin-client-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-admin tid=44547]

--- 180000000 ns (0.12%), 18 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [11] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [12] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.commitOffsetsAsync_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.doAutoCommitOffsetsAsync_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.maybeAutoCommitOffsetsAsync_[j]
  [15] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.poll_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.updateAssignmentMetadataIfNeeded_[j]
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [18] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [19] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [20] java.lang.Thread.run_[j]
  [21] [Thread-3 tid=87043]

--- 180000000 ns (0.12%), 18 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_2-producer tid=83459]

--- 170000000 ns (0.11%), 17 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=51203]

--- 170000000 ns (0.11%), 17 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=51203]

--- 170000000 ns (0.11%), 17 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=28931]

--- 170000000 ns (0.11%), 17 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_0-producer tid=46851]

--- 170000000 ns (0.11%), 17 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=79875]

--- 170000000 ns (0.11%), 17 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=79503]

--- 170000000 ns (0.11%), 17 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=79503]

--- 170000000 ns (0.11%), 17 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | producer-2 tid=33539]

--- 160000000 ns (0.10%), 16 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [15] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [18] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [19] java.lang.Thread.run_[j]
  [20] [Thread-3 tid=87043]

--- 160000000 ns (0.10%), 16 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_1-producer tid=84483]

--- 160000000 ns (0.10%), 16 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_0-producer tid=26891]

--- 160000000 ns (0.10%), 16 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_0-producer tid=45315]

--- 160000000 ns (0.10%), 16 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_0-producer tid=45315]

--- 160000000 ns (0.10%), 16 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=40707]

--- 160000000 ns (0.10%), 16 samples
  [ 0] PhaseIdealLoop::idom_no_update(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=39427]

--- 160000000 ns (0.10%), 16 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=79619]

--- 160000000 ns (0.10%), 16 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=49411]

--- 160000000 ns (0.10%), 16 samples
  [ 0] write
  [ 1] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.wakeup_[j]
  [ 4] org.apache.kafka.common.network.Selector.wakeup_[j]
  [ 5] org.apache.kafka.clients.NetworkClient.wakeup_[j]
  [ 6] org.apache.kafka.clients.producer.internals.Sender.wakeup_[j]
  [ 7] org.apache.kafka.clients.producer.KafkaProducer.flush_[j]
  [ 8] org.apache.kafka.streams.processor.internals.RecordCollectorImpl.flush_[j]
  [ 9] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [10] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [12] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [13] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [16] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [17] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [18] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 160000000 ns (0.10%), 16 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_2-producer tid=82691]

--- 160000000 ns (0.10%), 16 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_1-producer tid=82947]

--- 160000000 ns (0.10%), 16 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_1-producer tid=81667]

--- 150000000 ns (0.10%), 15 samples
  [ 0] stat64
  [ 1] rocksdb::SstFileManagerImpl::OnAddFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 2] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 3] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 4] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 5] rocksdb::DBImpl::BackgroundCallFlush()
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 7] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 8] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=79503]

--- 150000000 ns (0.10%), 15 samples
  [ 0] __psynch_cvwait
  [ 1] std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&)
  [ 2] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 3] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 4] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 5] _pthread_start
  [ 6] thread_start
  [ 7] [tid=79503]

--- 150000000 ns (0.10%), 15 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_2-producer tid=83459]

--- 150000000 ns (0.10%), 15 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)
  [ 4] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 5] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 9] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [10] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [12] rocksdb::DBImpl::BackgroundCallFlush()
  [13] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [14] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [15] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [16] _pthread_start
  [17] thread_start
  [18] [tid=79619]

--- 150000000 ns (0.10%), 15 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] rocksdb::port::Mutex::Lock()
  [ 3] rocksdb::InstrumentedMutex::Lock()
  [ 4] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 5] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 6] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 7] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 8] org.rocksdb.RocksDB.flush_[j]
  [ 9] org.rocksdb.RocksDB.flush_[j]
  [10] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [11] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [12] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [17] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [18] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [19] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [24] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [28] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 150000000 ns (0.10%), 15 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_1-producer tid=46083]

--- 140000000 ns (0.09%), 14 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_0-producer tid=84739]

--- 140000000 ns (0.09%), 14 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=79619]

--- 140000000 ns (0.09%), 14 samples
  [ 0] stat64
  [ 1] rocksdb::SstFileManagerImpl::OnAddFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 2] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 3] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 4] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 5] rocksdb::DBImpl::BackgroundCallFlush()
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 7] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 8] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=52051]

--- 140000000 ns (0.09%), 14 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_1-producer tid=82947]

--- 140000000 ns (0.09%), 14 samples
  [ 0] write
  [ 1] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.wakeup_[j]
  [ 4] org.apache.kafka.common.network.Selector.wakeup_[j]
  [ 5] org.apache.kafka.clients.NetworkClient.wakeup_[j]
  [ 6] org.apache.kafka.clients.producer.internals.Sender.wakeup_[j]
  [ 7] org.apache.kafka.clients.producer.KafkaProducer.commitTransaction_[j]
  [ 8] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [ 9] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [10] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [11] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [12] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [13] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [14] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [15] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [16] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 140000000 ns (0.09%), 14 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=52051]

--- 140000000 ns (0.09%), 14 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_0-producer tid=45315]

--- 140000000 ns (0.09%), 14 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] CompileQueue::get()
  [ 5] CompileBroker::compiler_thread_loop()
  [ 6] JavaThread::thread_main_inner()
  [ 7] JavaThread::run()
  [ 8] java_start(Thread*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=39171]

--- 140000000 ns (0.09%), 14 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_1-producer tid=81667]

--- 140000000 ns (0.09%), 14 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-1 tid=34055]

--- 140000000 ns (0.09%), 14 samples
  [ 0] stat64
  [ 1] rocksdb::SstFileManagerImpl::OnAddFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 2] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 3] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 4] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 5] rocksdb::DBImpl::BackgroundCallFlush()
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 7] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 8] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=51795]

--- 140000000 ns (0.09%), 14 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_0-producer tid=82435]

--- 140000000 ns (0.09%), 14 samples
  [ 0] __psynch_cvwait
  [ 1] Parker::park(bool, long)
  [ 2] Unsafe_Park
  [ 3] sun.misc.Unsafe.park_[j]
  [ 4] akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
  [ 5] akka.dispatch.forkjoin.ForkJoinPool.runWorker_[j]
  [ 6] akka.dispatch.forkjoin.ForkJoinWorkerThread.run_[j]
  [ 7] [GatlingSystem-akka.actor.default-dispatcher-4 tid=74023]

--- 140000000 ns (0.09%), 14 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_1-producer tid=84483]

--- 140000000 ns (0.09%), 14 samples
  [ 0] write
  [ 1] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.interrupt_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.wakeup_[j]
  [ 4] org.apache.kafka.common.network.Selector.wakeup_[j]
  [ 5] org.apache.kafka.clients.NetworkClient.wakeup_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.firePendingCompletedRequests_[j]
  [ 7] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [ 8] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [10] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [11] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [12] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [Thread-3 tid=87043]

--- 140000000 ns (0.09%), 14 samples
  [ 0] PhaseIdealLoop::dom_depth(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=29443]

--- 140000000 ns (0.09%), 14 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=49923]

--- 140000000 ns (0.09%), 14 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=51459]

--- 140000000 ns (0.09%), 14 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClientUtils.isReady_[j]
  [10] org.apache.kafka.clients.NetworkClientUtils.awaitReady_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.awaitNodeReady_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_0-producer tid=45315]

--- 140000000 ns (0.09%), 14 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] CompileQueue::get()
  [ 5] CompileBroker::compiler_thread_loop()
  [ 6] JavaThread::thread_main_inner()
  [ 7] JavaThread::run()
  [ 8] java_start(Thread*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=39939]

--- 140000000 ns (0.09%), 14 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_1-producer tid=47875]

--- 130000000 ns (0.08%), 13 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_1-producer tid=46083]

--- 130000000 ns (0.08%), 13 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_2-producer tid=48387]

--- 130000000 ns (0.08%), 13 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_2-producer tid=83459]

--- 130000000 ns (0.08%), 13 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] _pthread_cond_wait
  [ 3] rocksdb::port::CondVar::Wait()
  [ 4] rocksdb::InstrumentedCondVar::Wait()
  [ 5] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 6] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 7] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 8] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 9] org.rocksdb.RocksDB.flush_[j]
  [10] org.rocksdb.RocksDB.flush_[j]
  [11] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [12] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.AbstractSegments.flush_[j]
  [14] org.apache.kafka.streams.state.internals.AbstractRocksDBSegmentedBytesStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [17] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [18] org.apache.kafka.streams.state.internals.MeteredWindowStore.flush_[j]
  [19] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [20] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [24] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [25] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [28] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [29] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [30] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 130000000 ns (0.08%), 13 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_2-producer tid=84227]

--- 130000000 ns (0.08%), 13 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=28931]

--- 130000000 ns (0.08%), 13 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park()
  [ 2] ParkCommon(ParkEvent*, long)
  [ 3] Monitor::IWait(Thread*, long)
  [ 4] Monitor::wait(bool, long, bool)
  [ 5] ServiceThread::service_thread_entry(JavaThread*, Thread*)
  [ 6] JavaThread::thread_main_inner()
  [ 7] JavaThread::run()
  [ 8] java_start(Thread*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=31491]

--- 130000000 ns (0.08%), 13 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=80387]

--- 130000000 ns (0.08%), 13 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=40707]

--- 130000000 ns (0.08%), 13 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClientUtils.isReady_[j]
  [10] org.apache.kafka.clients.NetworkClientUtils.awaitReady_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.awaitNodeReady_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_2-producer tid=48387]

--- 130000000 ns (0.08%), 13 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=50691]

--- 130000000 ns (0.08%), 13 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=40451]

--- 130000000 ns (0.08%), 13 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::SyncManifest(rocksdb::Env*, rocksdb::ImmutableDBOptions const*, rocksdb::WritableFileWriter*)
  [ 4] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 5] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 9] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [10] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [12] rocksdb::DBImpl::BackgroundCallFlush()
  [13] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [14] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [15] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [16] _pthread_start
  [17] thread_start
  [18] [tid=51795]

--- 130000000 ns (0.08%), 13 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_0-producer tid=46851]

--- 130000000 ns (0.08%), 13 samples
  [ 0] __unlink
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 3] rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 4] rocksdb::DeleteSSTFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
  [ 5] rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::FileType, unsigned long long)
  [ 6] rocksdb::DBImpl::PurgeObsoleteFiles(rocksdb::JobContext&, bool)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=80643]

--- 130000000 ns (0.08%), 13 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_0-producer tid=82435]

--- 130000000 ns (0.08%), 13 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=49667]

--- 120000000 ns (0.08%), 12 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=50947]

--- 120000000 ns (0.08%), 12 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_0-producer tid=26891]

--- 120000000 ns (0.08%), 12 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-2_2-producer tid=82691]

--- 120000000 ns (0.08%), 12 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [11] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [12] [kafka-coordinator-heartbeat-thread | avro-user-benchs-app tid=85251]

--- 120000000 ns (0.08%), 12 samples
  [ 0] PhaseIdealLoop::dom_depth(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=30723]

--- 120000000 ns (0.08%), 12 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=80643]

--- 120000000 ns (0.08%), 12 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long)
  [ 4] rocksdb::log::Writer::AddRecord(rocksdb::Slice const&)
  [ 5] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 9] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [10] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [12] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [13] rocksdb::DBImpl::BackgroundCallFlush()
  [14] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [15] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [16] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [17] _pthread_start
  [18] thread_start
  [19] [tid=79619]

--- 120000000 ns (0.08%), 12 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_2-producer tid=81411]

--- 120000000 ns (0.08%), 12 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long)
  [ 4] rocksdb::log::Writer::AddRecord(rocksdb::Slice const&)
  [ 5] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 9] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [10] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [12] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [13] rocksdb::DBImpl::BackgroundCallFlush()
  [14] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [15] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [16] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [17] _pthread_start
  [18] thread_start
  [19] [tid=51795]

--- 120000000 ns (0.08%), 12 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::Env::Default()
  [ 2] rocksdb::NewWritableFile(rocksdb::Env*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::unique_ptr<rocksdb::WritableFile, std::__1::default_delete<rocksdb::WritableFile> >*, rocksdb::EnvOptions const&)
  [ 3] rocksdb::CompactionJob::OpenCompactionOutputFile(rocksdb::CompactionJob::SubcompactionState*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=80387]

--- 120000000 ns (0.08%), 12 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_0-producer tid=45315]

--- 120000000 ns (0.08%), 12 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClientUtils.isReady_[j]
  [10] org.apache.kafka.clients.NetworkClientUtils.awaitReady_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.awaitNodeReady_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_0-producer tid=26891]

--- 110000000 ns (0.07%), 11 samples
  [ 0] read
  [ 1] sun.nio.ch.FileDispatcherImpl.read0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.read_[j]
  [ 3] sun.nio.ch.IOUtil.readIntoNativeBuffer_[j]
  [ 4] sun.nio.ch.IOUtil.read_[j]
  [ 5] sun.nio.ch.SocketChannelImpl.read_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.read_[j]
  [ 7] org.apache.kafka.common.network.NetworkReceive.readFrom_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.receive_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.read_[j]
  [10] org.apache.kafka.common.network.Selector.attemptRead_[j]
  [11] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [12] org.apache.kafka.common.network.Selector.poll_[j]
  [13] org.apache.kafka.clients.NetworkClient.poll_[j]
  [14] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [15] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [16] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [17] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [18] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [19] io.simplesource.kafka.internal.client.KafkaConsumerRunner$RunnableConsumer.run_[j]
  [20] java.lang.Thread.run_[j]
  [21] [Thread-3 tid=87043]

--- 110000000 ns (0.07%), 11 samples
  [ 0] pread
  [ 1] rocksdb::RandomAccessFileReader::Read(unsigned long long, unsigned long, rocksdb::Slice*, char*) const
  [ 2] rocksdb::BlockFetcher::ReadBlockContents()
  [ 3] rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache(rocksdb::FilePrefetchBuffer*, rocksdb::BlockBasedTable::Rep*, rocksdb::ReadOptions const&, rocksdb::BlockHandle const&, rocksdb::Slice, rocksdb::BlockBasedTable::CachableEntry<rocksdb::Block>*, bool, rocksdb::GetContext*)
  [ 4] rocksdb::BlockBasedTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&)
  [ 5] rocksdb::BlockBasedTable::Close()
  [ 6] rocksdb::BlockBasedTable::Close()
  [ 7] rocksdb::VersionSet::GetTotalSstFilesSize(rocksdb::Version*)
  [ 8] rocksdb::MergeIteratorBuilder::Finish()
  [ 9] rocksdb::DBIter::Seek(rocksdb::Slice const&)
  [10] Java_org_rocksdb_RocksIterator_seek0
  [11] org.rocksdb.RocksIterator.seek0_[j]
  [12] org.rocksdb.AbstractRocksIterator.seek_[j]
  [13] org.apache.kafka.streams.state.internals.RocksDBRangeIterator.<init>_[j]
  [14] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.range_[j]
  [15] org.apache.kafka.streams.state.internals.RocksDBStore.range_[j]
  [16] org.apache.kafka.streams.state.internals.SegmentIterator.hasNext_[j]
  [17] org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator.hasNext_[j]
  [18] org.apache.kafka.streams.state.internals.MeteredWindowStoreIterator.hasNext_[j]
  [19] org.apache.kafka.streams.kstream.internals.KStreamKStreamJoin$KStreamKStreamJoinProcessor.process_[j]
  [20] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [21] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [22] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [23] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [24] org.apache.kafka.streams.kstream.internals.KStreamJoinWindow$KStreamJoinWindowProcessor.process_[j]
  [25] org.apache.kafka.streams.processor.internals.ProcessorNode.process_[j]
  [26] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [27] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [28] org.apache.kafka.streams.processor.internals.ProcessorContextImpl.forward_[j]
  [29] org.apache.kafka.streams.processor.internals.SourceNode.process_[j]
  [30] org.apache.kafka.streams.processor.internals.StreamTask.process_[j]
  [31] org.apache.kafka.streams.processor.internals.AssignedStreamsTasks.process_[j]
  [32] org.apache.kafka.streams.processor.internals.TaskManager.process_[j]
  [33] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [34] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [35] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [36] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 110000000 ns (0.07%), 11 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_1-producer tid=46083]

--- 110000000 ns (0.07%), 11 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=30211]

--- 110000000 ns (0.07%), 11 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_1-producer tid=46083]

--- 110000000 ns (0.07%), 11 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [12] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [13] java.lang.Thread.run_[j]
  [14] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_0-producer tid=84739]

--- 110000000 ns (0.07%), 11 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-4_0-producer tid=82435]

--- 110000000 ns (0.07%), 11 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long)
  [ 4] rocksdb::log::Writer::AddRecord(rocksdb::Slice const&)
  [ 5] rocksdb::VersionSet::ProcessManifestWrites(std::__1::deque<rocksdb::VersionSet::ManifestWriter, std::__1::allocator<rocksdb::VersionSet::ManifestWriter> >&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 6] rocksdb::VersionSet::LogAndApply(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<rocksdb::MutableCFOptions const*, 8ul> const&, rocksdb::autovector<rocksdb::autovector<rocksdb::VersionEdit*, 8ul>, 8ul> const&, rocksdb::InstrumentedMutex*, rocksdb::Directory*, bool, rocksdb::ColumnFamilyOptions const*)
  [ 7] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 8] rocksdb::MemTableList::TryInstallMemtableFlushResults(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, rocksdb::autovector<rocksdb::MemTable*, 8ul> const&, rocksdb::LogsWithPrepTracker*, rocksdb::VersionSet*, rocksdb::InstrumentedMutex*, unsigned long long, rocksdb::autovector<rocksdb::MemTable*, 8ul>*, rocksdb::Directory*, rocksdb::LogBuffer*)
  [ 9] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [10] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [11] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [12] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [13] rocksdb::DBImpl::BackgroundCallFlush()
  [14] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [15] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [16] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [17] _pthread_start
  [18] thread_start
  [19] [tid=79503]

--- 110000000 ns (0.07%), 11 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-3_2-producer tid=81411]

--- 110000000 ns (0.07%), 11 samples
  [ 0] PhaseChaitin::build_ifg_physical(ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=28931]

--- 110000000 ns (0.07%), 11 samples
  [ 0] fsync
  [ 1] rocksdb::WritableFileWriter::SyncInternal(bool)
  [ 2] rocksdb::WritableFileWriter::Sync(bool)
  [ 3] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 4] rocksdb::FlushJob::WriteLevel0Table()
  [ 5] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 6] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 7] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 9] rocksdb::DBImpl::BackgroundCallFlush()
  [10] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [11] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [12] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=51795]

--- 110000000 ns (0.07%), 11 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] ObjectMonitor::EnterI(Thread*)
  [ 3] ObjectMonitor::enter(Thread*)
  [ 4] SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*)
  [ 5] org.apache.kafka.clients.consumer.internals.AbstractCoordinator.rejoinNeededOrPending_[j]
  [ 6] org.apache.kafka.clients.consumer.internals.ConsumerCoordinator.rejoinNeededOrPending_[j]
  [ 7] org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches_[j]
  [ 8] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.KafkaConsumer.poll_[j]
  [10] org.apache.kafka.streams.processor.internals.StreamThread.pollRequests_[j]
  [11] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [12] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [13] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [14] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 110000000 ns (0.07%), 11 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_0-producer tid=84739]

--- 110000000 ns (0.07%), 11 samples
  [ 0] write
  [ 1] writeBytes
  [ 2] Java_java_io_FileOutputStream_writeBytes
  [ 3] java.io.FileOutputStream.writeBytes_[j]
  [ 4] java.io.FileOutputStream.write_[j]
  [ 5] java.io.BufferedOutputStream.write_[j]
  [ 6] java.io.PrintStream.write_[j]
  [ 7] java.io.FilterOutputStream.write_[j]
  [ 8] ch.qos.logback.core.joran.spi.ConsoleTarget$1.write_[j]
  [ 9] ch.qos.logback.core.OutputStreamAppender.writeBytes_[j]
  [10] ch.qos.logback.core.OutputStreamAppender.subAppend_[j]
  [11] ch.qos.logback.core.OutputStreamAppender.append_[j]
  [12] ch.qos.logback.core.UnsynchronizedAppenderBase.doAppend_[j]
  [13] ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders_[j]
  [14] ch.qos.logback.core.AsyncAppenderBase$Worker.run_[j]
  [15] [AsyncAppender-Worker-ASYNC_CONSOLE tid=32259]

--- 110000000 ns (0.07%), 11 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_0-producer tid=84739]

--- 110000000 ns (0.07%), 11 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.selectNow_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll_[j]
  [10] org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup_[j]
  [11] org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run_[j]
  [12] [kafka-coordinator-heartbeat-thread | response_consumer_81c66347 tid=86531]

--- 100000000 ns (0.07%), 10 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_2-producer tid=83459]

--- 100000000 ns (0.07%), 10 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-1_1-producer tid=84483]

--- 100000000 ns (0.07%), 10 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_2-producer tid=84227]

--- 100000000 ns (0.07%), 10 samples
  [ 0] stat64
  [ 1] rocksdb::SstFileManagerImpl::OnAddFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
  [ 2] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 3] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 4] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [ 5] rocksdb::DBImpl::BackgroundCallFlush()
  [ 6] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [ 7] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [ 8] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=79619]

--- 100000000 ns (0.07%), 10 samples
  [ 0] rcmd_af.canonnamebuf
  [ 1] rocksdb::TableCache::GetTableReader(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, bool, unsigned long, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr<rocksdb::TableReader, std::__1::default_delete<rocksdb::TableReader> >*, rocksdb::SliceTransform const*, bool, int, bool, bool)
  [ 2] rocksdb::TableCache::FindTable(rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileDescriptor const&, rocksdb::Cache::Handle**, rocksdb::SliceTransform const*, bool, bool, rocksdb::HistogramImpl*, bool, int, bool)
  [ 3] rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&, rocksdb::EnvOptions const&, rocksdb::InternalKeyComparator const&, rocksdb::FileMetaData const&, rocksdb::RangeDelAggregator*, rocksdb::SliceTransform const*, rocksdb::TableReader**, rocksdb::HistogramImpl*, bool, rocksdb::Arena*, bool, int, rocksdb::InternalKey const*, rocksdb::InternalKey const*)
  [ 4] rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*)
  [ 5] rocksdb::CompactionJob::Run()
  [ 6] rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*)
  [ 7] rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority)
  [ 8] rocksdb::DBImpl::BGWorkCompaction(void*)
  [ 9] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [10] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [11] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [12] _pthread_start
  [13] thread_start
  [14] [tid=51459]

--- 100000000 ns (0.07%), 10 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=39427]

--- 100000000 ns (0.07%), 10 samples
  [ 0] __psynch_mutexwait
  [ 1] _pthread_mutex_firstfit_lock_slow
  [ 2] _pthread_cond_wait
  [ 3] rocksdb::port::CondVar::Wait()
  [ 4] rocksdb::InstrumentedCondVar::Wait()
  [ 5] rocksdb::DBImpl::WaitForFlushMemTables(rocksdb::autovector<rocksdb::ColumnFamilyData*, 8ul> const&, rocksdb::autovector<unsigned long long const*, 8ul> const&, bool)
  [ 6] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 7] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 8] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 9] org.rocksdb.RocksDB.flush_[j]
  [10] org.rocksdb.RocksDB.flush_[j]
  [11] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [12] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [13] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [17] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [18] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [19] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [20] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [24] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [25] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [28] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [29] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 100000000 ns (0.07%), 10 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] CompileQueue::get()
  [ 5] CompileBroker::compiler_thread_loop()
  [ 6] JavaThread::thread_main_inner()
  [ 7] JavaThread::run()
  [ 8] java_start(Thread*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=30211]

--- 100000000 ns (0.07%), 10 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=29443]

--- 100000000 ns (0.07%), 10 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=52051]

--- 100000000 ns (0.07%), 10 samples
  [ 0] PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
  [ 1] PhaseChaitin::post_allocate_copy_removal()
  [ 2] PhaseChaitin::Register_Allocate()
  [ 3] Compile::Code_Gen()
  [ 4] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 5] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 6] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 7] CompileBroker::compiler_thread_loop()
  [ 8] JavaThread::thread_main_inner()
  [ 9] JavaThread::run()
  [10] java_start(Thread*)
  [11] _pthread_start
  [12] thread_start
  [13] [tid=39427]

--- 100000000 ns (0.07%), 10 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [15] java.lang.Thread.run_[j]
  [16] [kafka-producer-network-thread | producer-1 tid=34055]

--- 100000000 ns (0.07%), 10 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] CompileQueue::get()
  [ 5] CompileBroker::compiler_thread_loop()
  [ 6] JavaThread::thread_main_inner()
  [ 7] JavaThread::run()
  [ 8] java_start(Thread*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=38659]

--- 100000000 ns (0.07%), 10 samples
  [ 0] __psynch_cvwait
  [ 1] os::PlatformEvent::park(long)
  [ 2] Monitor::IWait(Thread*, long)
  [ 3] Monitor::wait(bool, long, bool)
  [ 4] CompileQueue::get()
  [ 5] CompileBroker::compiler_thread_loop()
  [ 6] JavaThread::thread_main_inner()
  [ 7] JavaThread::run()
  [ 8] java_start(Thread*)
  [ 9] _pthread_start
  [10] thread_start
  [11] [tid=39427]

--- 100000000 ns (0.07%), 10 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_2-producer tid=84227]

--- 100000000 ns (0.07%), 10 samples
  [ 0] kevent
  [ 1] sun.nio.ch.KQueueArrayWrapper.register0_[j]
  [ 2] sun.nio.ch.KQueueArrayWrapper.updateRegistrations_[j]
  [ 3] sun.nio.ch.KQueueArrayWrapper.poll_[j]
  [ 4] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 6] sun.nio.ch.SelectorImpl.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.select_[j]
  [ 8] org.apache.kafka.common.network.Selector.poll_[j]
  [ 9] org.apache.kafka.clients.NetworkClient.poll_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [11] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [12] java.lang.Thread.run_[j]
  [13] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_0-producer tid=45315]

--- 100000000 ns (0.07%), 10 samples
  [ 0] write
  [ 1] rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long)
  [ 2] rocksdb::WritableFileWriter::Flush()
  [ 3] rocksdb::WritableFileWriter::Sync(bool)
  [ 4] rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
  [ 5] rocksdb::FlushJob::WriteLevel0Table()
  [ 6] rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*)
  [ 7] rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, rocksdb::LogBuffer*)
  [ 8] rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector<rocksdb::DBImpl::BGFlushArg, 8ul> const&, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*)
  [ 9] rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*)
  [10] rocksdb::DBImpl::BackgroundCallFlush()
  [11] rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long)
  [12] rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*)
  [13] void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, void* (*)(void*), rocksdb::BGThreadMetadata*> >(void*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=51795]

--- 100000000 ns (0.07%), 10 samples
  [ 0] read
  [ 1] sun.nio.ch.IOUtil.drain_[j]
  [ 2] sun.nio.ch.KQueueSelectorImpl.updateSelectedKeys_[j]
  [ 3] sun.nio.ch.KQueueSelectorImpl.doSelect_[j]
  [ 4] sun.nio.ch.SelectorImpl.lockAndDoSelect_[j]
  [ 5] sun.nio.ch.SelectorImpl.select_[j]
  [ 6] org.apache.kafka.common.network.Selector.select_[j]
  [ 7] org.apache.kafka.common.network.Selector.poll_[j]
  [ 8] org.apache.kafka.clients.NetworkClient.poll_[j]
  [ 9] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [10] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [11] java.lang.Thread.run_[j]
  [12] [kafka-producer-network-thread | producer-2 tid=33539]

--- 100000000 ns (0.07%), 10 samples
  [ 0] writev
  [ 1] sun.nio.ch.FileDispatcherImpl.writev0_[j]
  [ 2] sun.nio.ch.SocketDispatcher.writev_[j]
  [ 3] sun.nio.ch.IOUtil.write_[j]
  [ 4] sun.nio.ch.SocketChannelImpl.write_[j]
  [ 5] java.nio.channels.SocketChannel.write_[j]
  [ 6] org.apache.kafka.common.network.PlaintextTransportLayer.write_[j]
  [ 7] org.apache.kafka.common.network.ByteBufferSend.writeTo_[j]
  [ 8] org.apache.kafka.common.network.KafkaChannel.send_[j]
  [ 9] org.apache.kafka.common.network.KafkaChannel.write_[j]
  [10] org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
  [11] org.apache.kafka.common.network.Selector.poll_[j]
  [12] org.apache.kafka.clients.NetworkClient.poll_[j]
  [13] org.apache.kafka.clients.producer.internals.Sender.maybeSendAndPollTransactionalRequest_[j]
  [14] org.apache.kafka.clients.producer.internals.Sender.runOnce_[j]
  [15] org.apache.kafka.clients.producer.internals.Sender.run_[j]
  [16] java.lang.Thread.run_[j]
  [17] [kafka-producer-network-thread | avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1-0_0-producer tid=45315]

--- 100000000 ns (0.07%), 10 samples
  [ 0] yperr_string.err
  [ 1] std::__1::thread::hardware_concurrency()
  [ 2] rocksdb::ConcurrentArena::Repick()
  [ 3] rocksdb::ConcurrentArena::ConcurrentArena(unsigned long, rocksdb::AllocTracker*, unsigned long)
  [ 4] rocksdb::MemTable::MemTable(rocksdb::InternalKeyComparator const&, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::WriteBufferManager*, unsigned long long, unsigned int)
  [ 5] rocksdb::ColumnFamilyData::ConstructNewMemtable(rocksdb::MutableCFOptions const&, unsigned long long)
  [ 6] rocksdb::DBImpl::SwitchMemtable(rocksdb::ColumnFamilyData*, rocksdb::DBImpl::WriteContext*)
  [ 7] rocksdb::DBImpl::FlushMemTable(rocksdb::ColumnFamilyData*, rocksdb::FlushOptions const&, rocksdb::FlushReason, bool)
  [ 8] rocksdb::DBImpl::Flush(rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [ 9] rocksdb_flush_helper(JNIEnv_*, rocksdb::DB*, rocksdb::FlushOptions const&, rocksdb::ColumnFamilyHandle*)
  [10] org.rocksdb.RocksDB.flush_[j]
  [11] org.rocksdb.RocksDB.flush_[j]
  [12] org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor.flush_[j]
  [13] org.apache.kafka.streams.state.internals.RocksDBStore.flush_[j]
  [14] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [15] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [16] org.apache.kafka.streams.state.internals.CachingKeyValueStore.flush_[j]
  [17] org.apache.kafka.streams.state.internals.WrappedStateStore.flush_[j]
  [18] org.apache.kafka.streams.state.internals.MeteredKeyValueStore.flush_[j]
  [19] org.apache.kafka.streams.processor.internals.ProcessorStateManager.flush_[j]
  [20] org.apache.kafka.streams.processor.internals.AbstractTask.flushState_[j]
  [21] org.apache.kafka.streams.processor.internals.StreamTask.flushState_[j]
  [22] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [23] org.apache.kafka.streams.processor.internals.StreamTask.commit_[j]
  [24] org.apache.kafka.streams.processor.internals.AssignedTasks.commit_[j]
  [25] org.apache.kafka.streams.processor.internals.TaskManager.commitAll_[j]
  [26] org.apache.kafka.streams.processor.internals.StreamThread.maybeCommit_[j]
  [27] org.apache.kafka.streams.processor.internals.StreamThread.runOnce_[j]
  [28] org.apache.kafka.streams.processor.internals.StreamThread.runLoop_[j]
  [29] org.apache.kafka.streams.processor.internals.StreamThread.run_[j]
  [30] [avro-user-benchs-app-5622173f-1c01-4a45-8ea7-938627dd7c74-StreamThread-1 tid=45059]

--- 100000000 ns (0.07%), 10 samples
  [ 0] PhaseIdealLoop::dom_depth(Node*) const
  [ 1] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 2] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 3] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 4] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 5] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 6] Compile::Optimize()
  [ 7] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 8] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 9] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [10] CompileBroker::compiler_thread_loop()
  [11] JavaThread::thread_main_inner()
  [12] JavaThread::run()
  [13] java_start(Thread*)
  [14] _pthread_start
  [15] thread_start
  [16] [tid=30211]

--- 100000000 ns (0.07%), 10 samples
  [ 0] PhaseChaitin::Split(unsigned int, ResourceArea*)
  [ 1] PhaseChaitin::Register_Allocate()
  [ 2] Compile::Code_Gen()
  [ 3] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 4] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 5] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 6] CompileBroker::compiler_thread_loop()
  [ 7] JavaThread::thread_main_inner()
  [ 8] JavaThread::run()
  [ 9] java_start(Thread*)
  [10] _pthread_start
  [11] thread_start
  [12] [tid=30723]

--- 100000000 ns (0.07%), 10 samples
  [ 0] PhaseIdealLoop::is_dominator(Node*, Node*)
  [ 1] PhaseIdealLoop::get_late_ctrl(Node*, Node*)
  [ 2] PhaseIdealLoop::build_loop_late_post(Node*)
  [ 3] PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
  [ 4] PhaseIdealLoop::build_and_optimize(bool, bool)
  [ 5] Compile::Optimize()
  [ 6] Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool)
  [ 7] C2Compiler::compile_method(ciEnv*, ciMethod*, int)
  [ 8] CompileBroker::invoke_compiler_on_method(CompileTask*)
  [ 9] CompileBroker::compiler_thread_loop()
  [10] JavaThread::thread_main_inner()
  [11] JavaThread::run()
  [12] java_start(Thread*)
  [13] _pthread_start
  [14] thread_start
  [15] [tid=30211]

          ns  percent  samples  top
  ----------  -------  -------  ---
 15160000000    9.91%     1516  kevent
 10650000000    6.96%     1065  __psynch_cvwait
  6910000000    4.52%      691  writev
  6810000000    4.45%      681  rcmd_af.canonnamebuf
  2900000000    1.90%      290  __unlink
  2720000000    1.78%      272  PhaseIdealLoop::idom_no_update(Node*) const
  2720000000    1.78%      272  write
  2310000000    1.51%      231  [unknown_Java]
  2270000000    1.48%      227  __psynch_mutexwait
  2040000000    1.33%      204  fsync
  1650000000    1.08%      165  read
  1560000000    1.02%      156  JNIMethodBlock::add_method(Method*)
  1400000000    0.92%      140  __psynch_cvsignal
  1210000000    0.79%      121  java.util.HashMap.getNode_[j]
  1080000000    0.71%      108  IndexSetIterator::advance_and_next()
   970000000    0.63%       97  _platform_memmove$VARIANT$Haswell
   950000000    0.62%       95  PhaseIdealLoop::is_dominator(Node*, Node*)
   940000000    0.61%       94  IndexSetIterator::next()
   900000000    0.59%       90  PhaseIdealLoop::dom_depth(Node*) const
   890000000    0.58%       89  stat64
   830000000    0.54%       83  PhaseChaitin::Split(unsigned int, ResourceArea*)
   760000000    0.50%       76  IndexSet::insert(unsigned int)
   670000000    0.44%       67  java.lang.String.hashCode_[j]
   580000000    0.38%       58  PhaseChaitin::build_ifg_physical(ResourceArea*)
   570000000    0.37%       57  tiny_malloc_from_free_list
   570000000    0.37%       57  tiny_free_no_lock
   560000000    0.37%       56  itable stub
   550000000    0.36%       55  org.apache.kafka.common.metrics.stats.SampledStat.current_[j]
   530000000    0.35%       53  Arena::contains(void const*) const
   520000000    0.34%       52  tiny_malloc_should_clear
   470000000    0.31%       47  PhaseAggressiveCoalesce::insert_copies(Matcher&)
   470000000    0.31%       47  _platform_bzero$VARIANT$Haswell
   450000000    0.29%       45  pread
   420000000    0.27%       42  PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&, Node_List&, bool)
   420000000    0.27%       42  PhaseChaitin::gather_lrg_masks(bool)
   410000000    0.27%       41  java.util.HashMap$HashIterator.nextNode_[j]
   410000000    0.27%       41  jshort_disjoint_arraycopy
   400000000    0.26%       40  java.util.HashMap.hash_[j]
   400000000    0.26%       40  __vfprintf
   390000000    0.25%       39  java.util.HashMap$HashIterator.<init>_[j]
   380000000    0.25%       38  free_tiny
   370000000    0.24%       37  PhaseLive::compute(unsigned int)
   370000000    0.24%       37  java.util.LinkedHashMap$LinkedHashIterator.nextNode_[j]
   370000000    0.24%       37  tiny_free_list_add_ptr
   360000000    0.24%       36  org.apache.kafka.common.metrics.Sensor.record_[j]
   350000000    0.23%       35  sun.nio.ch.KQueueArrayWrapper.register0_[j]
   340000000    0.22%       34  RegMask::Size() const
   340000000    0.22%       34  org.apache.kafka.clients.admin.KafkaAdminClient$AdminClientRunnable.run_[j]
   330000000    0.22%       33  VectorSet::test_set(unsigned int)
   320000000    0.21%       32  SpinPause
   310000000    0.20%       31  IndexSet::initialize(unsigned int)
   310000000    0.20%       31  PhaseIdealLoop::build_loop_late(VectorSet&, Node_List&, Node_Stack&)
   300000000    0.20%       30  PhaseChaitin::post_allocate_copy_removal()
   300000000    0.20%       30  PhaseIdealLoop::get_late_ctrl(Node*, Node*)
   300000000    0.20%       30  tiny_size
   290000000    0.19%       29  java.util.HashMap.putVal_[j]
   290000000    0.19%       29  SymbolTable::lookup(int, char const*, int, unsigned int)
   290000000    0.19%       29  DIR_Chunk::find_match(GrowableArray<DIR_Chunk*>*, int, DebugInformationRecorder*)
   290000000    0.19%       29  PhaseIdealLoop::build_loop_early(VectorSet&, Node_List&, Node_Stack&)
   280000000    0.18%       28  PhaseIdealLoop::get_ctrl_no_update(Node*) const
   280000000    0.18%       28  binary_search(Array<Method*>*, Symbol*)
   270000000    0.18%       27  java.util.concurrent.ConcurrentHashMap.get_[j]
   260000000    0.17%       26  gettimeofday
   260000000    0.17%       26  __gettimeofday
   250000000    0.16%       25  ObjectMonitor::TrySpin_VaryDuration(Thread*)
   250000000    0.16%       25  Node::dominates(Node*, Node_List&)
   250000000    0.16%       25  _res
   240000000    0.16%       24  Node::del_out(Node*)
   240000000    0.16%       24  java.util.Objects.equals_[j]
   240000000    0.16%       24  rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long)
   230000000    0.15%       23  Copy::pd_disjoint_words(HeapWord*, HeapWord*, unsigned long)
   230000000    0.15%       23  org.apache.kafka.common.metrics.stats.Meter.record_[j]
   230000000    0.15%       23  RegMask::overlap(RegMask const&) const
   230000000    0.15%       23  si_module_static_search.search_vtable
   230000000    0.15%       23  __fcntl
   220000000    0.14%       22  __psynch_mutexdrop
   220000000    0.14%       22  PhaseIdealLoop::Dominators()
   220000000    0.14%       22  java.util.HashMap.get_[j]
   220000000    0.14%       22  PhaseIdealLoop::build_loop_tree()
   220000000    0.14%       22  _platform_memcmp
   220000000    0.14%       22  akka.dispatch.forkjoin.ForkJoinPool.scan_[j]
   220000000    0.14%       22  akka.actor.LightArrayRevolverScheduler$$anon$3.nextTick_[j]
   220000000    0.14%       22  org.apache.kafka.common.metrics.Sensor.checkQuotas_[j]
   220000000    0.14%       22  java.util.HashMap.resize_[j]
   220000000    0.14%       22  java.util.ArrayList.access$000_[j]
   210000000    0.14%       21  org.apache.kafka.common.network.Selector.pollSelectionKeys_[j]
   210000000    0.14%       21  java.util.ArrayList$Itr.next_[j]
   210000000    0.14%       21  G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*)
   210000000    0.14%       21  IndexSet::remove(unsigned int)
   190000000    0.12%       19  Arena::Amalloc(unsigned long, AllocFailStrategy::AllocFailEnum)
   190000000    0.12%       19  sun.nio.ch.SelectorImpl.processDeregisterQueue_[j]
   190000000    0.12%       19  sun.nio.ch.KQueueArrayWrapper.kevent0_[j]
   190000000    0.12%       19  org.apache.kafka.common.utils.PureJavaCrc32C.update_[j]
   190000000    0.12%       19  I2C/C2I adapters(0xb0000000)@0x0000000119e09c60
   180000000    0.12%       18  java.util.HashMap$EntrySet.<init>_[j]
   170000000    0.11%       17  Dictionary::get_entry(int, unsigned int, Symbol*, ClassLoaderData*)
   170000000    0.11%       17  Block::end_idx() const
   170000000    0.11%       17  os::javaTimeNanos()
   170000000    0.11%       17  ThreadStateTransition::trans_from_native(JavaThreadState)
   170000000    0.11%       17  sun.nio.ch.SocketChannelImpl.write_[j]
   170000000    0.11%       17  java.util.ArrayList$Itr.<init>_[j]
   170000000    0.11%       17  pthread_getspecific
   170000000    0.11%       17  CodeHeap::search_freelist(unsigned long, bool)
   170000000    0.11%       17  org.apache.kafka.common.metrics.stats.Rate.record_[j]
   170000000    0.11%       17  org.apache.kafka.clients.NetworkClient.poll_[j]
   170000000    0.11%       17  java.util.Optional.<init>_[j]
   160000000    0.10%       16  ObjectMonitor::NotRunnable(Thread*, Thread*)
   160000000    0.10%       16  Node::add_out(Node*)
   160000000    0.10%       16  Dict::Insert(void*, void*, bool)
   160000000    0.10%       16  __sfvwrite
   160000000    0.10%       16  PhaseIdealLoop::has_node(Node*) const
   160000000    0.10%       16  org.apache.kafka.common.protocol.types.Schema.read_[j]
   160000000    0.10%       16  java.util.LinkedHashMap$LinkedValueIterator.<init>_[j]
   150000000    0.10%       15  yperr_string.err
   150000000    0.10%       15  h_errno
   150000000    0.10%       15  small_free_list_add_ptr
   150000000    0.10%       15  java.lang.StringCoding.encode_[j]
   150000000    0.10%       15  CodeHeap::find_start(void*) const
   150000000    0.10%       15  tiny_free_list_remove_ptr
   140000000    0.09%       14  HandleMarkCleaner::~HandleMarkCleaner()
   140000000    0.09%       14  sun.nio.ch.Util$BufferCache.get_[j]
   140000000    0.09%       14  Compile::BuildOopMaps()
   140000000    0.09%       14  RelocIterator::next()
   140000000    0.09%       14  java.lang.Iterable.forEach_[j]
   140000000    0.09%       14  void G1ParScanThreadState::do_oop_evac<unsigned int>(unsigned int*, HeapRegion*)
   140000000    0.09%       14  java.util.Optional.of_[j]
   140000000    0.09%       14  org.apache.kafka.common.TopicPartition.equals_[j]
   140000000    0.09%       14  Type::cmp(Type const*, Type const*)
   140000000    0.09%       14  RegMask::SUBTRACT(RegMask const&)
   130000000    0.08%       13  rocksdb::BuildTable(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::Env*, rocksdb::ImmutableCFOptions const&, rocksdb::MutableCFOptions const&, rocksdb::EnvOptions const&, rocksdb::TableCache*, rocksdb::InternalIteratorBase<rocksdb::Slice>*, std::__1::vector<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> >, std::__1::allocator<std::__1::unique_ptr<rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete<rocksdb::FragmentedRangeTombstoneIterator> > > >, rocksdb::FileMetaData*, rocksdb::InternalKeyComparator const&, std::__1::vector<std::__1::unique_ptr<rocksdb::IntTblPropCollectorFactory, std::__1::default_delete<rocksdb::IntTblPropCollector
   130000000    0.08%       13  java.util.LinkedHashMap$LinkedHashIterator.<init>_[j]
   130000000    0.08%       13  resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum)
   130000000    0.08%       13  IndexSet::alloc_block()
   130000000    0.08%       13  java.nio.ByteBuffer.<init>_[j]
   130000000    0.08%       13  java.util.HashMap.entrySet_[j]
   130000000    0.08%       13  org.apache.kafka.clients.InFlightRequests.nodesWithTimedOutRequests_[j]
   130000000    0.08%       13  java.util.concurrent.ConcurrentHashMap$Traverser.advance_[j]
   130000000    0.08%       13  [not_walkable_Java]
   130000000    0.08%       13  jlong_disjoint_arraycopy
   130000000    0.08%       13  PhaseIFG::effective_degree(unsigned int) const
   130000000    0.08%       13  NodeHash::hash_find_insert(Node*)
   120000000    0.08%       12  Node::find_exact_control(Node*)
   120000000    0.08%       12  org.apache.kafka.common.TopicPartition.hashCode_[j]
   120000000    0.08%       12  java.lang.Integer.valueOf_[j]
   120000000    0.08%       12  set_tiny_meta_header_in_use
   120000000    0.08%       12  sun.nio.cs.UTF_8$Encoder.encode_[j]
   120000000    0.08%       12  [unknown]
   120000000    0.08%       12  [not_walkable]
   120000000    0.08%       12  posix_madvise
   120000000    0.08%       12  java.lang.Thread.blockedOn_[j]
   120000000    0.08%       12  zError
   120000000    0.08%       12  PhaseChaitin::interfere_with_live(unsigned int, IndexSet*)
   120000000    0.08%       12  java.util.HashMap$EntrySet.iterator_[j]
   120000000    0.08%       12  PhaseIdealLoop::split_if_with_blocks(VectorSet&, Node_Stack&)
   110000000    0.07%       11  java.util.HashMap$KeySet.iterator_[j]
   110000000    0.07%       11  Unique_Node_List::push(Node*)
   110000000    0.07%       11  java.lang.Long.valueOf_[j]
   110000000    0.07%       11  rocksdb::DataBlockIter::Next()
   110000000    0.07%       11  CProjNode::is_block_proj() const
   110000000    0.07%       11  std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
   110000000    0.07%       11  MergeMemNode::Ideal(PhaseGVN*, bool)
   110000000    0.07%       11  sun.nio.ch.FileDispatcherImpl.writev0_[j]
   110000000    0.07%       11  org.apache.kafka.common.metrics.stats.Count.update_[j]
   110000000    0.07%       11  java.lang.ThreadLocal$ThreadLocalMap.getEntry_[j]
   110000000    0.07%       11  default_zone_malloc
   110000000    0.07%       11  ftruncate
   110000000    0.07%       11  ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState)
   110000000    0.07%       11  IndexSetIterator::IndexSetIterator(IndexSet*)
   100000000    0.07%       10  rocksdb::ReadMetaBlock(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, unsigned long long, unsigned long long, rocksdb::ImmutableCFOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, rocksdb::BlockContents*, bool, rocksdb::MemoryAllocator*)
   100000000    0.07%       10  TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypeOopPtr const*, int)
   100000000    0.07%       10  java.lang.Object.<init>_[j]
   100000000    0.07%       10  pthread_mutex_lock
   100000000    0.07%       10  java.util.LinkedHashMap$LinkedHashIterator.hasNext_[j]
   100000000    0.07%       10  java.nio.channels.spi.AbstractSelector.begin_[j]
   100000000    0.07%       10  java.util.HashMap.removeNode_[j]
   100000000    0.07%       10  java.nio.channels.spi.AbstractInterruptibleChannel$1.<init>_[j]
   100000000    0.07%       10  org.apache.kafka.common.metrics.Sensor.<init>_[j]
   100000000    0.07%       10  Node_List::push(Node*)
   100000000    0.07%       10  PhaseIdealLoop::get_ctrl(Node*)
   100000000    0.07%       10  rocksdb::NewBloomFilterPolicy(int, bool)
   100000000    0.07%       10  org.apache.kafka.clients.ClientRequest.<init>_[j]
   100000000    0.07%       10  java.util.ArrayList.<init>_[j]
   100000000    0.07%       10  java.util.ArrayList.<init>_[j]
   100000000    0.07%       10  org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient$UnsentRequests.clean_[j]
   100000000    0.07%       10  java.nio.Buffer.<init>_[j]
   100000000    0.07%       10  NMethodSweeper::process_nmethod(nmethod*)
   100000000    0.07%       10  free
   100000000    0.07%       10  _pthread_cond_wait
   100000000    0.07%       10  Node::is_CFG() const
    90000000    0.06%        9  akka.actor.LightArrayRevolverScheduler.waitNanos_[j]
    90000000    0.06%        9  java.util.HashMap.newNode_[j]
    90000000    0.06%        9  java.util.HashMap.computeIfAbsent_[j]
    90000000    0.06%        9  vtable stub
    90000000    0.06%        9  org.apache.kafka.clients.producer.internals.Sender.run_[j]
    90000000    0.06%        9  _dispatch_queue_attr_concurrent
    90000000    0.06%        9  java.util.AbstractSet.<init>_[j]
    90000000    0.06%        9  RegMask::smear_to_sets(int)
    90000000    0.06%        9  MachNode::rematerialize() const
    90000000    0.06%        9  rocksdb::DBImpl::FindObsoleteFiles(rocksdb::JobContext*, bool, bool)
    90000000    0.06%        9  sun.nio.ch.KQueueSelectorImpl.updateSelectedKeys_[j]
