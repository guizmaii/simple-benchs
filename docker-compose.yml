# Datadog docs:
#  - https://docs.datadoghq.com/graphing/infrastructure/livecontainers/?tab=docker
#  - https://docs.datadoghq.com/agent/docker/log/?tab=containerinstallation
#  - https://docs.datadoghq.com/integrations/kafka/#metric-collection
#  - https://docs.datadoghq.com/agent/docker/apm/
#  - https://docs.datadoghq.com/integrations/zk/
#

---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1-1
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    labels:
      com.datadoghq.ad.check_names: '["zk"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"host": "zookeeper", "port": 2181}]'
      com.datadoghq.ad.logs: '[{"type": "file", "path": "/var/log/zookeeper.log", "source": "zookeeper", "service": "simple-benchs"}]'

  kafka-1:
    image: confluentinc/cp-enterprise-kafka:5.3.1-1
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:39092,HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:39092,HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-1:39092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka-1
    labels:
      com.datadoghq.ad.check_names: '["kafka"]'
      com.datadoghq.ad.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      com.datadoghq.ad.instances: '[{"host": "kafka-1", "port": 9997, "name": "kafka-1"}]'
      com.datadoghq.ad.logs: '[{"type": "file", "path": "/var/log/kafka/server.log", "source": "kafka", "service": "simple-benchs"}]'

  kafka-2:
    image: confluentinc/cp-enterprise-kafka:5.3.1-1
    container_name: kafka-2
    depends_on:
      - zookeeper
    ports:
      - 19092:19092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:49092,HOST://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:49092,HOST://localhost:19092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-2:49092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9998
      KAFKA_JMX_HOSTNAME: kafka-2
    labels:
      com.datadoghq.ad.check_names: '["kafka"]'
      com.datadoghq.ad.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      com.datadoghq.ad.instances: '[{"host": "kafka-2", "port": 9998, "name": "kafka-2"}]'
      com.datadoghq.ad.logs: '[{"type": "file", "path": "/var/log/kafka/server.log", "source": "kafka", "service": "simple-benchs"}]'

  kafka-3:
    image: confluentinc/cp-enterprise-kafka:5.3.1-1
    container_name: kafka-3
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:59092,HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:59092,HOST://localhost:29092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
#      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-3:59092
#      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka-3
    labels:
      com.datadoghq.ad.check_names: '["kafka"]'
      com.datadoghq.ad.init_configs: '[{"is_jmx": true, "collect_default_metrics": true}]'
      com.datadoghq.ad.instances: '[{"host": "kafka-3", "port": 9999, "name": "kafka-3"}]'
      com.datadoghq.ad.logs: '[{"type": "file", "path": "/var/log/kafka/server.log", "source": "kafka", "service": "simple-benchs"}]'

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1-1
    ports:
      - 8081:8081
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:39092,PLAINTEXT://kafka-2:49092,PLAINTEXT://kafka-3:59092
      SCHEMA_REGISTRY_CUB_KAFKA_TIMEOUT: 300

  datadog:
    container_name: datadog-agent
    image: datadog/agent:latest-jmx
    depends_on:
      - zookeeper
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - 127.0.0.1:8125:8125
      - 127.0.0.1:8126:8126/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /opt/datadog-agent/run:/opt/datadog-agent/run:rw
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
    environment:
      DD_API_KEY: "${DD_API_KEY}"
      DD_LOGS_ENABLED: "true"
      DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL: "true"
      DD_AC_EXCLUDE: "name:datadog-agent"
      DD_APM_ENABLED: "true"

#  control-center:
#    image: confluentinc/cp-enterprise-control-center:5.3.1-1
#    depends_on:
#      - zookeeper
#      - kafka-1
#      - kafka-2
#      - kafka-3
#    ports:
#      - "9021:9021"
#    environment:
#      CONTROL_CENTER_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:39092,PLAINTEXT://kafka-2:49092,PLAINTEXT://kafka-3:59092
#      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
#      CONTROL_CENTER_REPLICATION_FACTOR: 3
#      PORT: 9021
